{
    "results": [
        {
            "name": "sachinl0har/Basic-Calc",
            "path": "Basic-Calc/",
            "type": "folder",
            "keywords": [],
            "children": [
                {
                    "name": "README.md",
                    "path": "Basic-Calc/README.md",
                    "type": "file",
                    "keywords": [
                        "tests",
                        "is_prime",
                        "divisors",
                        "printing",
                        "prime",
                        "provided",
                        "Python",
                        "iterating",
                        "case",
                        "function",
                        "check",
                        "number",
                        "defines",
                        "code",
                        "output",
                        "given",
                        "root",
                        "Programs",
                        "Numbers.5",
                        "Addition",
                        "Basic-Calc-in-multiple-languages",
                        "Number.9",
                        "sum",
                        "Exponenent.8",
                        "Circle",
                        "Features:1",
                        "Converter",
                        "Power",
                        "Numbers.6",
                        "Number.15",
                        "/",
                        "Hypotenuse.7",
                        "Diagonal",
                        "Number",
                        "Random",
                        "Numbers.4",
                        "Perimeter",
                        "Subtraction",
                        "Division",
                        "Converter.10",
                        "digit",
                        "Rectangle",
                        "Number.11",
                        "Reverse",
                        "Hypotenuse",
                        "cubes",
                        "Area.13",
                        "Length",
                        "Numbers.3",
                        "Armstrong",
                        "*",
                        "Get",
                        "%",
                        "Generate",
                        "Fahrenheit",
                        "Transpose",
                        "Find",
                        "Matrices",
                        "Celcius",
                        "Features",
                        "Number.12",
                        "Circumference",
                        "number",
                        "using",
                        "i.e.",
                        "Area",
                        "Base",
                        "Width.14",
                        "Tables",
                        "N",
                        "Triangle",
                        "Matrix.More",
                        "Table",
                        "Numbers.2",
                        "uploaded",
                        "+",
                        "Diameter",
                        "Radius",
                        "Multipication"
                    ],
                    "annotation": "The provided Python code defines a function is_prime(n) to check if a given number is a prime number, iterating from 2 to the square root of the number to determine if it has any divisors other than 1 and itself. It then tests this function with the number 7, printing whether it is prime or not. In this case, the output will be: \"Is 7 a prime number? True\".",
                    "content": "# Basic-Calc-in-multiple-languages \n\n### Features:\n1. Addition + - Addition of N Numbers.\n2. Subtraction - - Subtraction of N Numbers.\n3. Multipication * - Multipication of Two Numbers.\n4. Division / - Division of two Numbers.\n5. Modulus % - Modulus of Two Numbers.\n6. Hypotenuse - Find Any Triangle's Hypotenuse.\n7. Power of a Number - Find any Number Power using Base and Exponenent.\n8. Random Number - Generate any Random Number.\n9. Converter - Celcius to Fahrenheit and Fahrenheit to Celcius Converter.\n10. Armstrong Number - You can Find any number is the sum of cubes of each digit is equal to the number itself or Not i.e., Armstrong Number.\n11. Reverse a Number - Reverse any Number.\n12. Circle - To Find Radius, Diameter, Circumference and Area.\n13. Rectangle - To Find Area, Diagonal, Perimeter, Length and Width.\n14. Tables - You can Get any Table of any Number.\n15. Matrices - Addition, Subtraction, Multipication of two Matrices and Transpose of a Matrix.\n\nMore Features will be uploaded soon.\n\n\nMore Language Programs will be uploaded soon\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/README.md"
                },
                {
                    "name": "calc.java",
                    "path": "Basic-Calc/calc.java",
                    "type": "file",
                    "keywords": [
                        "operation",
                        "subtraction",
                        "numbers",
                        "option",
                        "perform",
                        "exit",
                        "Java",
                        "operations",
                        "selected",
                        "calculator",
                        "input",
                        "program",
                        "represents",
                        "written",
                        "code",
                        "result",
                        "multiplication",
                        "user",
                        "division",
                        "asking",
                        "display",
                        "addition",
                        "\\n16",
                        "Difference",
                        "Element",
                        "option",
                        "perimeter/2",
                        "Number",
                        "want",
                        "max",
                        "Subtraction",
                        "case",
                        "cant",
                        "<",
                        "calc",
                        "class",
                        "\\n9",
                        "option1",
                        "columns1",
                        "Printing",
                        "Length",
                        "\\n13",
                        "exp",
                        "Matrices",
                        "pow",
                        "Divison",
                        "import",
                        "\\n14",
                        "randN.nextInt",
                        "int",
                        "columns",
                        "diameter",
                        "\\n3",
                        "Base",
                        "k",
                        "n",
                        "b",
                        "j++",
                        "tables",
                        "Modulus",
                        "c",
                        "\\n10",
                        "\\033",
                        "Diameter",
                        "perimeter",
                        "Radius",
                        "Matrix",
                        "num.nextInt",
                        "ae",
                        "\\n4",
                        "transpose",
                        "Math.sqrt",
                        "Circle",
                        "]",
                        "Reversed",
                        "matrix.nextInt",
                        "i++",
                        "\\nAddition\\n",
                        "radius",
                        "SUM",
                        "System.exit",
                        "Diagonal",
                        "diagonal",
                        "==",
                        "con",
                        "circumference",
                        "Perimeter",
                        "Temperature",
                        "Rectangle",
                        "length",
                        "Scanner",
                        "switch",
                        "[",
                        "Columns",
                        "Choice",
                        "x",
                        "%",
                        "Product",
                        "rnum",
                        "Celsius",
                        "elements",
                        "\\n6",
                        "=",
                        "circle",
                        "break",
                        "circle.nextInt",
                        "Rectangle\\n1",
                        "rev",
                        "Tables",
                        "pow.nextInt",
                        "rows1",
                        "\\n15",
                        "revNum",
                        "id",
                        "remainder",
                        "j",
                        "B",
                        "base",
                        "+",
                        "System.out.format",
                        "\\n12",
                        "Addition",
                        "rows",
                        "temp+",
                        "Integer",
                        "oexp",
                        "\\n11",
                        "\\nSubtraction\\n",
                        "matrix2",
                        "First",
                        "randNumber",
                        "args",
                        "void",
                        "element",
                        "multiplied",
                        "z",
                        "Division",
                        "Second",
                        "\\nModulus\\n",
                        "circumference/",
                        "min",
                        "+=",
                        "matrix",
                        "Hypotenuse",
                        "\\nThe",
                        "con.nextInt",
                        "Armstrong",
                        "*",
                        "Exponent",
                        "Math.random",
                        "rSum",
                        "Fahrenheit",
                        "Transpose",
                        "Elements",
                        "System.out.println",
                        "Circumference",
                        "java.util",
                        "Raised",
                        "randN",
                        "multiply",
                        "\\n8",
                        "side",
                        "tables.nextInt",
                        "-=",
                        "rectangleArea",
                        "System.out.print",
                        "\\nDivision\\n",
                        "calc.nextInt",
                        "rectangle.nextDouble",
                        "rectangle.nextInt",
                        "Visiting\\n",
                        "f",
                        "Converter",
                        "Power",
                        "revNum.nextInt",
                        "/",
                        "Combination",
                        "see",
                        "String",
                        "Random",
                        "checked",
                        "matrix1",
                        "ce",
                        "H\\033",
                        "temp",
                        "d\\t",
                        "Numbers",
                        ">",
                        "option2",
                        "Substract",
                        "cel",
                        "Reverse",
                        "Width",
                        "\\nMultipication\\n",
                        "\\n5",
                        "width",
                        "\\n",
                        "\\n7",
                        "choice",
                        "++i",
                        "numS",
                        "number",
                        "\\n2",
                        "tNum",
                        "\\nEnter",
                        "Area",
                        "Rows",
                        "rectangle",
                        "result",
                        "Circle\\n1",
                        "Table",
                        "Enter",
                        "Sum",
                        "Whose",
                        "System.in",
                        "ce+",
                        "e",
                        "area",
                        "Exit",
                        "Multipication"
                    ],
                    "annotation": "The code is written in Java and represents a calculator program with various operations like addition, subtraction, multiplication, division, and more. The user can choose an operation, input numbers, and the program will perform the selected operation and display the result before asking for another input or the option to exit.",
                    "content": "import java.util.*;\n\npublic class calc {\n    public static void main(String[] args){\n        double a, b, c = 0, e = 0, x, y, z;\n        int d, numS;\n        Scanner calc = new Scanner(System.in);\n        System.out.print(\"\\033[H\\033[2J\");\n        while(e == 0){\n            System.out.println(\"\\n1. Addition + \\n2. Subtraction - \\n3. Multipication * \\n4. Division / \\n5. Modulus % \\n6. Hypotenuse \\n7. Power of a Number \\n8. Random Number \\n9. Converter \\n10. Armstrong Number \\n11. Reverse a Number \\n12. Circle \\n13. Rectangle \\n14. Tables \\n15. Matrices \\n16. Exit \\nEnter Your Choice: \\n\");\n        d = calc.nextInt();\n        switch(d){\n            case 1:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nAddition\\n\");\n                System.out.println(\"Enter How many Numbers you want to SUM: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 1; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c += a;\n                }\n                System.out.println(\"\\nThe Sum of \" + numS + \" Numbers is \" + c );\n                break;\n            case 2:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nSubtraction\\n\");\n                System.out.println(\"Enter How many Numbers you want to Substract: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter Number 1: \\n\");\n                c = calc.nextDouble();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 2; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c -= a;\n                }\n                System.out.println(\"\\nThe Difference of \" + numS + \" Numbers is \" + c );\n                break;\n            case 3:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nMultipication\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a * b;\n                System.out.println(\"\\nThe Combination of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 4:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nDivision\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a / b;\n                System.out.println(\"\\nThe Divison of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 5:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nModulus\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a % b;\n                System.out.println(\"\\nThe Modulus of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 6:\n                System.out.print(\"\\033[H\\033[2J\");\n                System.out.println(\"Enter side x: \");\n                x  = calc.nextDouble();\n                System.out.println(\"\\nEnter side y: \");\n                y = calc.nextDouble();\n                z = Math.sqrt((x * x) + (y * y));\n                System.out.println(\"The Hypotenuse is \" + z);\n                break;\n            case 7:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner pow = new Scanner(System.in);\n                int base, exp, oexp, result = 1;\n                System.out.println(\"Enter Base Number: \");\n                base = pow.nextInt();\n                System.out.println(\"Enter an Exponent: \");\n                exp = pow.nextInt();\n                oexp = exp;\n                while(exp != 0){\n                    result *= base;\n                    --exp;\n                }\n                System.out.println(\"The Power of \" + base + \" Raised to \" + oexp + \" is \" + result);\n                break;\n            case 8:\n                System.out.print(\"\\033[H\\033[2J\");\n                int min, max;\n                Scanner randN = new Scanner(System.in);\n                System.out.println(\"Enter the min number: \");\n                min  = randN.nextInt();\n                System.out.println(\"Enter the max number: \");\n                max = randN.nextInt();\n                int randNumber = (int)(Math.random() * (max - min + 1) + min);\n                System.out.println(\"Random Number Between \" + min + \" to \" + max + \" is \" + randNumber);\n                break;\n            case 9:\n                System.out.print(\"\\033[H\\033[2J\");\n                double f, cel; \n                int option;\n                Scanner con = new Scanner(System.in);\n                System.out.println(\"1. Celsius to Fahrenheit \\n2. Fahrenheit to Celsius \\nEnter Your Choice: \");\n                option = con.nextInt();\n                switch(option){\n                    case 1:\n                        System.out.println(\"Enter Temperature in Celsius: \");\n                        cel = con.nextDouble();\n                        f = (cel * 9/5) + 32;\n                        System.out.println(\"The Temperature of \" + cel + \" Celsius in Fahrenheit is: \" + f);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Temperature in Fahrenheit: \");\n                        f = con.nextDouble();\n                        cel = (f - 32) * 5/9;\n                        System.out.println(\"The Temperature of \" + f + \" Fahrenheit in Celsius is: \" + cel);\n                        break;\n                }\n                break;\n            case 10:\n                System.out.print(\"\\033[H\\033[2J\");\n                int ce = 0, ae, temp, n;\n                Scanner num = new Scanner(System.in);\n                System.out.print(\"Enter number to be checked: \");\n                n = num.nextInt();\n                temp = n;\n                while(n > 0){\n                    ae = n % 10;\n                    n = n/10;\n                    ce = ce+(ae*ae*ae);\n                }\n                if(temp == ce){\n                    System.out.println(temp+\" is an Armstrong Number.\");\n                }else{\n                    System.out.println(temp+\" is not an Armstrong Number.\");\n                }\n                break;\n            case 11:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner revNum = new Scanner(System.in);\n                int rnum, rev = 0, remainder;\n                System.out.println(\"Enter an Integer: \");\n                rnum = revNum.nextInt();\n                while(rnum != 0){\n                    remainder = rnum % 10;\n                    rev = rev * 10 + remainder;\n                    rnum /= 10;\n                }\n                System.out.println(\"Reversed Number of \" + rnum + \" is \" + rev);\n                break;\n            case 12:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner circle = new Scanner(System.in);\n                double radius, circumference, area, diameter;\n                int choice;\n                System.out.println(\"Circle\\n1. Radius \\n2. Diameter \\n3. Circumference \\n4. Area \\nEnter Your Choice: \");\n                choice = circle.nextInt();\n                switch(choice){\n                    case 1:\n                        System.out.println(\"Enter Circumference of Circle: \");\n                        circumference = circle.nextDouble();\n                        radius = circumference/(2 * 3.14);\n                        System.out.println(\"Radius of Circumference \" + circumference + \" = \" + radius);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        diameter = 2 * radius;\n                        System.out.println(\"The Diameter of radius \" + radius + \" Circle = \" + diameter);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        circumference = 2 * 3.14 * radius;\n                        System.out.println(\"The Circumference of Radius \" + radius + \" Circle = \" + circumference);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        area = 3.14 * radius * radius;\n                        System.out.println(\"The Area of Radius \" + radius + \" Circle = \" + area);\n                        break;\n                }\n                break;\n            case 13:\n                System.out.print(\"\\033[H\\033[2J\");\n                double length, width, rectangleArea, perimeter, diagonal;\n                int option1;\n                Scanner rectangle = new Scanner(System.in);\n                System.out.println(\"Rectangle\\n1. Area \\n2. Diagonal \\n3. Perimeter \\n4. Length \\n5. Width \\nEnter Your Choice: \");\n                option1 = rectangle.nextInt();\n                switch(option1){\n                    case 1:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        rectangleArea = length * width;\n                        System.out.println(\"The Area of the Rectangle \" + length + \" Length \" + width + \" Width is \" + rectangleArea);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        diagonal = Math.sqrt((length * length) + (width * width));\n                        System.out.println(\"The Diagonal of the Rectangle \" + length + \" Length \" + width + \" width is \" + diagonal);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        perimeter = 2 * (length + width);\n                        System.out.println(\"The Perimeter of the Rectangle \" + length + \" Length \" + width + \" width is \" + perimeter);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        length = (perimeter/2) - width;\n                        System.out.println(\"The Length of Rectangle whose Perimeter = \" + perimeter + \" and Width = \" + width + \" is \" + length);\n                        break;\n                    case 5:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        width = (perimeter/2) - length;\n                        System.out.println(\"The Width of Rectangle whose Perimeter = \" + perimeter + \" and Length = \" + length + \" is \" + width);\n                        break;\n                }\n                break;\n            case 14:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner tables = new Scanner(System.in);\n                int tNum;\n                System.out.println(\"Enter a Number Whose Table you want to see: \");\n                tNum = tables.nextInt();\n                System.out.println(\"\\n\" + tNum + \" x 1 = \" + tNum * 1 + \" \\n\");\n                System.out.println(tNum + \" x 2 = \" + tNum * 2 + \" \\n\");\n                System.out.println(tNum + \" x 3 = \" + tNum * 3 + \" \\n\");\n                System.out.println(tNum + \" x 4 = \" + tNum * 4 + \" \\n\");\n                System.out.println(tNum + \" x 5 = \" + tNum * 5 + \" \\n\");\n                System.out.println(tNum + \" x 6 = \" + tNum * 6 + \" \\n\");\n                System.out.println(tNum + \" x 7 = \" + tNum * 7 + \" \\n\");\n                System.out.println(tNum + \" x 8 = \" + tNum * 8 + \" \\n\");\n                System.out.println(tNum + \" x 9 = \" + tNum * 9 + \" \\n\");\n                System.out.println(tNum + \" x 10 = \" + tNum * 10 + \" \\n\");\n                break;\n            case 15:\n                System.out.print(\"\\033[H\\033[2J\");\n                int rows, rows1, columns, columns1, option2, i, j, k, rSum = 0;\n                int[][] matrix1 = new int[100][100], matrix2 = new int[100][100], mSum = new int[100][100];\n                Scanner matrix = new Scanner(System.in);\n                System.out.println(\"1. Addition \\n2. Subtraction \\n3. Multipication \\n4. Transpose \\nEnter Your Choice: \");\n                option2 = matrix.nextInt();\n                switch(option2){\n                    case 1:\n                        System.out.println(\"Enter Number of Rows: \");\n                        rows = matrix.nextInt();\n                        System.out.println(\"Enter Number of Columns: \");\n                        columns = matrix.nextInt();\n                        System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                            matrix1[i][j] = matrix.nextInt();\n                            }\n                        }\n                        System.out.println(\"Enter element of 2nd matrix: \");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                                matrix2[i][j] = matrix.nextInt();\n                                }\n                            }\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                mSum[i][j] = matrix1[i][j] + matrix2[i][j];\n                            }\n                        }\n                        System.out.println(\"\\nSum of Two Matrices: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"%d \", mSum[i][j]);\n                                if(j == columns - 1){\n                                    System.out.println(\"\\n\");\n                                }\n                            }\n                        }\n                break;\n                case 2:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter element of 2nd matrix: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                            matrix2[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            mSum[i][j] = matrix1[i][j] - matrix2[i][j];\n                        }\n                    }\n                    System.out.println(\"\\nDifference of Two Matrices: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"%d \", mSum[i][j]);\n                            if(j == columns - 1){\n                                System.out.println(\"\\n\");\n                            }\n                        }\n                    }\n                    break;\n                case 3:\n                    System.out.println(\"Enter the number of rows of Matrix 1: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 1: \");\n                    columns = matrix.nextInt();\n                    matrix1 = new int[rows][columns];\n                    System.out.println(\"Enter elements of Matrix 1: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter the number of rows of Matrix 2: \");\n                    rows1 = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 2: \");\n                    columns1 = matrix.nextInt();\n                    if(columns != rows1){\n                        System.out.println(\"The Matrices cant be multiplied with each other as Number of columns of Matrix 1 id not equal to Number of rows of Matrix 2.\");\n                    }else{\n                        int[][] second = new int[rows1][columns1];\n                        int[][] multiply = new int[rows][columns1];\n                    System.out.println(\"Enter Elements of Matrix 2: \");\n                    for(i = 0; i < rows1; ++i){\n                        for(j = 0; j < columns1; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                second[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            for(k = 0; k < rows1; k++){\n                                rSum = rSum + matrix1[i][k] * second[k][j];\n                            }\n                            multiply[i][j] = rSum;\n                            rSum = 0;\n                        }\n                    }\n                    System.out.println(\"Product of the Matrices: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0;j < columns1; j++){\n                            System.out.format(\"%d\\t\", multiply[i][j]);\n                            if(j == columns1 - 1){\n                            System.out.print(\"\\n\");\n                            }\n                        }\n                    }\n                    }\n                    break;\n                case 4:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of the matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"The Matrix is: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(matrix1[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    int[][] transpose = new int[columns][rows];\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            transpose[i][j] = matrix1[j][i];\n                        }\n                    }\n                    System.out.println(\"Printing Matrix After Transpose: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(transpose[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    break;\n                }\n                break;\n            case 16:\n                System.out.print(\"\\033[H\\033[2J\");\n                e = 1;\n                System.out.println(\"\\nThank You For Visiting\\n\");\n                System.exit(0);\n                break;\n        }\n        } calc.close();\n    } \n}\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.java"
                },
                {
                    "name": "calc.py",
                    "path": "Basic-Calc/calc.py",
                    "type": "file",
                    "keywords": [
                        "operation",
                        "subtraction",
                        "inputs",
                        "Python",
                        "choose",
                        "calculating",
                        "option",
                        "Users",
                        "calculates",
                        "temperature",
                        "triangle",
                        "operations",
                        "conversion",
                        "selected",
                        "program",
                        "messages",
                        "interface",
                        "printing",
                        "carries",
                        "needed",
                        "menu",
                        "code",
                        "displays",
                        "provide",
                        "solutions",
                        "multiplication",
                        "presents",
                        "division",
                        "results",
                        "area",
                        "addition",
                        "/2",
                        "f",
                        "switchers",
                        "World\\",
                        "Printed",
                        "Triangle\\n6",
                        "Division\\n5",
                        "option",
                        "switchers.get",
                        "/",
                        "Value",
                        "Number",
                        "triangle",
                        "Fahrenheit\\n2",
                        "math",
                        "celsius",
                        "Temperature",
                        "option1",
                        "'cls",
                        "input",
                        "print",
                        "cel",
                        "fahrenheit",
                        "float",
                        "Subtraction\\n3",
                        "Hello",
                        "root",
                        "system",
                        "Choice",
                        "r",
                        "substraction",
                        "printing",
                        "%",
                        "*",
                        "x",
                        "elif",
                        "converter",
                        "Function",
                        "multipication",
                        "import",
                        "\\nDifference",
                        "Fahrenheit",
                        "Roots",
                        "Multipication\\n4",
                        "Disctiminant",
                        "sqrtdef",
                        "Print\\n",
                        "Celsius",
                        "=",
                        "Converter\\n8",
                        "message",
                        "using",
                        "\\nDivision",
                        "World",
                        "int",
                        "Addition\\n2",
                        "Area",
                        "roots",
                        "Solutions\\n7",
                        "Celsius\\n",
                        "b",
                        "Side",
                        "Enter",
                        "c",
                        "\\nMultipication",
                        "x^2",
                        "def",
                        "division",
                        "systemfrom",
                        "-b",
                        "+",
                        "sqrt",
                        "area",
                        "addition"
                    ],
                    "annotation": "This Python code presents a simple command-line menu for various mathematical operations like addition, subtraction, multiplication, division, calculating the area of a triangle, quadratic solutions, temperature conversion, and printing messages. Users choose an option, provide inputs as needed, and the program calculates and displays the results accordingly or carries out the selected operation as per the menu-driven interface.",
                    "content": "from os import system\nfrom math import sqrt\n\ndef main():\n    system('cls');\n    print(\"1. Addition\\n2. Subtraction\\n3. Multipication\\n4. Division\\n5. Area of Triangle\\n6. Quadratic Solutions\\n7. Converter\\n8. Print\\n\")\n    option = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: addition,\n        2: substraction,\n        3: multipication,\n        4: division,\n        5: triangle,\n        6: quadratic,\n        7: converter,\n        8: printing\n    }\n    switchers.get(option)()\n\ndef addition():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a + b\n    print(\"\\nSum of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef substraction():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a - b\n    print(\"\\nDifference of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef multipication():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a * b\n    print(\"\\nMultipication of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef division():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a / b\n    print(\"\\nDivision of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef triangle():\n    system('cls')\n    a = float(input(\"Enter 1st Side: \"))\n    b = float(input(\"Enter 2st Side: \"))\n    c = float(input(\"Enter 3st Side: \"))\n    s = (a + b + c)/2\n    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5  \n    print('The area of the triangle is %0.2f' %area)\n\ndef quadratic():\n    system('cls')\n    print(\"Quadratic Function : (a * x^2) + b*x + c\")\n    a = float(input(\"Enter Value of a: \"))\n    b = float(input(\"Enter Value of b: \"))\n    c = float(input(\"Enter Value of c: \"))\n\n    r = b**2 - 4*a*c;\n    if r > 0:\n        roots = 2\n        x = (((-b) + sqrt(r))/(2*a))\n        y = (((-b) + sqrt(r))/(2*a))\n        print(\"There are two roots: %f an d %f\" % (x, y))\n    elif r == 0:\n        roots = 1\n        x = (-b) / 2*a\n        print(\"There is 1 root: \", x)\n    else:\n        roots = 0\n        print(\"No Roots, Disctiminant is less than 0.\")\n\ndef converter():\n    system('cls')\n    print(\"1. Celsius to Fahrenheit\\n2. Fahrenheit to Celsius\\n\")\n    option1 = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: celsius,\n        2: fahrenheit\n    }\n    switchers.get(option1)()\n\ndef celsius():\n    system('cls')\n    cel = float(input(\"Enter Temperature in Celsius: \"))\n    f = (cel * 9/5) + 32;\n    print(\"The Temperature of %f Celsius in Fahrenheit is : %f\" % (cel, f))\ndef fahrenheit():\n    system('cls')\n    f = float(input(\"Enter Temperature in Fahrenheit: \"))\n    cel = (f - 32) * 5/9\n    print(\"The Temperature of %f Fahrenheit in Celsius is : %f\" % (f, cel))\n\ndef printing():\n    system('cls')\n    print(\"\\\"Hello World\\\"\")\n    print('\\'Hello World\\'')\n    message = \"Hello World (Printed using a variable)\"\n    print(message)\n\nmain()\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.py"
                }
            ]
        },
        {
            "name": "TravHaran/rust-calculator",
            "path": "rust-calculator/",
            "type": "folder",
            "keywords": [],
            "children": [
                {
                    "name": "Cargo.lock",
                    "path": "rust-calculator/Cargo.lock",
                    "type": "file",
                    "keywords": [
                        "security",
                        "versions",
                        "crates",
                        "project",
                        "package",
                        "information",
                        "generated",
                        "dependencies",
                        "ensure",
                        "file",
                        "registry",
                        "includes",
                        "sourced",
                        "integrity",
                        "itertools",
                        "Cargo.toml",
                        "checksums",
                        "names",
                        "Rust",
                        "package",
                        "]",
                        "generated",
                        "dependencies",
                        "file",
                        "@",
                        "calc",
                        "[",
                        "intended",
                        "//github.com/rust-lang/crates.io-index",
                        "version",
                        "=",
                        "source",
                        "checksum",
                        "Cargo.",
                        "editing",
                        "registry+https",
                        "itertools",
                        "name"
                    ],
                    "annotation": "This is a generated Cargo.toml file for a Rust project. It includes package information such as names, versions, and dependencies like itertools and either, sourced from the Rust crates registry. The checksums ensure package integrity and security.",
                    "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"calc\"\nversion = \"0.1.0\"\ndependencies = [\n \"itertools\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d572918e350e82412fe766d24b15e6682fb2ed2bbe018280caa810397cb319\"\ndependencies = [\n \"either\",\n]\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/Cargo.lock"
                },
                {
                    "name": "Cargo.toml",
                    "path": "rust-calculator/Cargo.toml",
                    "type": "file",
                    "keywords": [
                        "set",
                        "project",
                        "projects",
                        "package",
                        "details",
                        "metadata",
                        "dependencies",
                        "file",
                        "edition",
                        "calc",
                        "snippet",
                        "dependency",
                        "example",
                        "version",
                        "specifies",
                        "code",
                        "used",
                        "manage",
                        "Cargo.toml",
                        "name",
                        "author",
                        "crate",
                        "Rust",
                        "Boisdequin",
                        "package",
                        "]",
                        "https",
                        "dependencies",
                        "definitions",
                        ">",
                        "edition",
                        "@",
                        "<",
                        "calc",
                        "[",
                        "See",
                        "Henry",
                        "authors",
                        "version",
                        "=",
                        "keys",
                        "itertools",
                        "name"
                    ],
                    "annotation": "This code snippet is a Cargo.toml file, used in Rust projects to manage dependencies and project metadata. In this example, the package name is set to \"calc\" with version \"0.1.0\" and the author's details. It also specifies the Rust edition and a dependency on the \"itertools\" crate version \"0.10\".",
                    "content": "[package]\nname = \"calc\"\nversion = \"0.1.0\"\nauthors = [\"Henry Boisdequin <65845077+henryboisdequin@users.noreply.github.com>\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nitertools = \"0.10\"\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/Cargo.toml"
                },
                {
                    "name": "README.md",
                    "path": "rust-calculator/README.md",
                    "type": "file",
                    "keywords": [
                        "directory",
                        "tests",
                        "run",
                        "Make",
                        "project",
                        "test",
                        "use",
                        "written",
                        "running",
                        "installed",
                        "calculator",
                        "Cloning",
                        "code",
                        "repository",
                        "cargo",
                        "Rust",
                        "directory",
                        "repository2",
                        "run",
                        "Make",
                        "project",
                        "installed3",
                        "type",
                        "test",
                        "Clone",
                        "Run1",
                        "calculator",
                        "Rust.",
                        "cargo",
                        "Rust",
                        "Cd"
                    ],
                    "annotation": "The code is a command-line calculator written in Rust. Cloning the repository and running cargo run will execute the calculator. Make sure Rust and cargo are installed and use cargo test to run tests within the project directory.",
                    "content": "Simple command-line calculator in Rust.\n\n## To Run\n\n1. Clone this repository\n\n2. Make sure you have Rust and cargo installed\n\n3. Cd into the project directory and type `cargo run`\n\n4. To test: run `cargo test`\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/README.md"
                },
                {
                    "name": "src",
                    "path": "rust-calculator/src",
                    "type": "folder",
                    "keywords": [],
                    "children": [
                        {
                            "name": "calc.rs",
                            "path": "rust-calculator/src/calc.rs",
                            "type": "file",
                            "keywords": [
                                "subtraction",
                                "test_all_operations",
                                "methods",
                                "struct",
                                "function",
                                "add",
                                "mul",
                                "f64",
                                "perform",
                                "Calc",
                                "operations",
                                "runs",
                                "output",
                                "tests",
                                "expected",
                                "written",
                                "values",
                                "defines",
                                "code",
                                "comparisons",
                                "multiplication",
                                "array",
                                "division",
                                "Rust",
                                "addition",
                                "subtraction",
                                "div",
                                "test_all_operations",
                                "-6.0",
                                "assert_eq",
                                "struct",
                                "]",
                                "arr",
                                "add",
                                "pub",
                                "Vec",
                                "mul",
                                "f64",
                                "Div",
                                "fn",
                                "x|",
                                "Calc",
                                "test",
                                ".unwrap_or",
                                ">",
                                "<",
                                "sub",
                                ":Itertools",
                                ".product",
                                "x",
                                ":div",
                                "Sub",
                                ".sum",
                                ".to_vec",
                                "std",
                                ".fold1",
                                "arr.iter",
                                "|",
                                ":sub",
                                ":ops",
                                ":add",
                                "itertools",
                                "multiplication",
                                "-3.0",
                                "division",
                                ":mul",
                                "use",
                                ".map",
                                "addition"
                            ],
                            "annotation": "The code, written in Rust, defines a Calc struct with methods for basic arithmetic operations. The methods add, sub, mul, and div perform addition, subtraction, multiplication, and division on an array of f64 values respectively. The test_all_operations function runs tests on these methods with expected output comparisons.",
                            "content": "use itertools::Itertools;\nuse std::ops::{Div, Sub};\n\npub struct Calc;\n\nimpl Calc {\n    pub fn add(arr: Vec<f64>) -> f64 {\n        arr.iter().sum::<f64>()\n    }\n\n    pub fn sub(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Sub::sub).unwrap_or(0.0)\n    }\n\n    pub fn mul(arr: Vec<f64>) -> f64 {\n        arr.iter().product()\n    }\n\n    pub fn div(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Div::div).unwrap_or(0.0)\n    }\n}\n\n#[test]\nfn test_all_operations() {\n    // addition\n    assert_eq!(Calc::add([2.0, 4.0, 6.0].to_vec()), 12.0);\n    assert_eq!(Calc::add([-6.0, 5.0, 10.0].to_vec()), 9.0);\n\n    // subtraction\n    assert_eq!(Calc::sub([10.0, 4.0, 6.0].to_vec()), 0.0);\n    assert_eq!(Calc::sub([100.0, 10.0, 19.0].to_vec()), 71.0);\n\n    // multiplication\n    assert_eq!(Calc::mul([10.0, 10.0, 2.0].to_vec()), 200.0);\n    assert_eq!(Calc::mul([-3.0, 2.0].to_vec()), -6.0);\n\n    // division\n    assert_eq!(Calc::div([54.0, 2.0, 3.0].to_vec()), 9.0);\n    assert_eq!(Calc::div([4.0, 2.0, 5.0].to_vec()), 0.4);\n}\n",
                            "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/calc.rs"
                        },
                        {
                            "name": "main.rs",
                            "path": "rust-calculator/src/main.rs",
                            "type": "file",
                            "keywords": [
                                "operation",
                                "corresponding",
                                "detects",
                                "struct",
                                "entering",
                                "/",
                                "Calc",
                                "operators",
                                "implements",
                                "prompts",
                                "runs",
                                "calculator",
                                "performs",
                                "equation",
                                "parses",
                                "program",
                                "quit",
                                "q",
                                "written",
                                "chooses",
                                "using",
                                "code",
                                "+",
                                "Rust",
                                "match",
                                "mod",
                                "subtraction",
                                "io",
                                "_",
                                "Welcome",
                                "parts",
                                "println",
                                "None",
                                "Failed",
                                ":stdin",
                                "counter",
                                "]",
                                ".collect",
                                "Vec",
                                "Invalid",
                                ".ok",
                                "/",
                                "operator",
                                "f64",
                                "Thanks",
                                "String",
                                "continue",
                                ".expect",
                                "==",
                                "Please",
                                "Calc",
                                "mut",
                                "valid_operators",
                                ">",
                                "q\\",
                                "calc",
                                "calculator",
                                "input",
                                "<",
                                "parts.len",
                                "+=",
                                "[",
                                "equation",
                                "program",
                                "quit",
                                "str",
                                "let",
                                "*",
                                ":div",
                                ":Calc",
                                "val",
                                "number",
                                "using",
                                "=",
                                "supported",
                                "std",
                                "read",
                                ":io",
                                "vec",
                                "break",
                                "input.find",
                                ".read_line",
                                "input.split",
                                ":sub",
                                "built",
                                ".trim",
                                "\\",
                                ":add",
                                "panic",
                                "multiplication",
                                "Enter",
                                "division",
                                ":mul",
                                ":new",
                                "+",
                                "Rust",
                                "addition"
                            ],
                            "annotation": "The code is written in Rust and implements a basic calculator. It prompts the user for an equation, detects valid operators (+, -, *, /), parses the input equation, and performs the corresponding operation using a custom Calc struct. The program runs in a loop until the user chooses to quit by entering \"q\".",
                            "content": "mod calc;\nuse calc::Calc;\nuse std::io;\n\nfn main() {\n    println!(\"Welcome to the a basic calculator built with Rust.\");\n\n    loop {\n        println!(\"Please enter an equation or \\\"q\\\" to quit: \");\n\n        let mut input = String::new();\n        io::stdin()\n            .read_line(&mut input)\n            .expect(\"Failed to read input\");\n\n        if input.trim() == \"q\" {\n            println!(\"Thanks for using this program.\");\n            break;\n        }\n\n        let valid_operators = vec![\"+\", \"-\", \"*\", \"/\"];\n\n        for operator in valid_operators {\n            match input.find(operator) {\n                Some(_) => {\n                    let parts: Vec<&str> = input.split(operator).collect();\n\n                    if parts.len() < 2 {\n                        panic!(\"Invalid equation.\");\n                    }\n\n                    let mut number_array = vec![];\n                    let mut counter = 0;\n\n                    while counter != parts.len() {\n                        let val: f64 = parts[counter].trim().parse().ok().expect(\"Enter a number.\");\n                        number_array.push(val);\n                        counter += 1;\n                    }\n\n                    match operator {\n                        \"+\" => println!(\"{}\", Calc::add(number_array)),\n                        \"-\" => println!(\"{}\", Calc::sub(number_array)),\n                        \"*\" => println!(\"{}\", Calc::mul(number_array)),\n                        \"/\" => println!(\"{}\", Calc::div(number_array)),\n                        _ => println!(\"Only addition, subtraction, multiplication and division are supported.\")\n                    }\n                }\n\n                None => {\n                    continue;\n                }\n            }\n        }\n    }\n}\n",
                            "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/main.rs"
                        }
                    ]
                }
            ]
        }
    ]
}