{
    "question": "is there a multiplication capability in these projects?",
    "answer": "Yes, there is a multiplication capability in the projects. Here are the details for each of the relevant files:\n\n1. **README.md**: Mentions \"Multiplication of Two Numbers\" and \"Multiplication of two Matrices\".\n   \n2. **calc.java**: \n   - Performs multiplication of two individual numbers (case 3).\n   - Multiplication of two matrices (case 15, option 3).\n\n3. **calc.py**: Contains a `multipication` function that multiplies two numbers (option 3).\n\n4. **calc.rs**: Implements multiplication of elements in a vector using the `mul` method.\n\n5. **main.rs**: Uses the `Calc::mul` method to handle multiplication operations for the user input.",
    "input_keywords": [
        "capability",
        "multiplication",
        "projects"
    ],
    "results": [
        {
            "score": 0.3333333333333333,
            "matched_keywords": [
                "multiplication"
            ],
            "node": {
                "name": "README.md",
                "path": "Basic-Calc/README.md",
                "type": "file",
                "keywords": [
                    "numbers",
                    "transposition",
                    "languages",
                    "offers",
                    "added",
                    "checking",
                    "reversing",
                    "programs",
                    "addition",
                    "division",
                    "multiplication",
                    "calculations",
                    "programming",
                    "triangle",
                    "tables",
                    "converting",
                    "calculator",
                    "generating",
                    "temperatures",
                    "circles",
                    "subtraction",
                    "future",
                    "functionality",
                    "performing",
                    "power",
                    "program",
                    "mentions",
                    "hypotenuse",
                    "description",
                    "finding",
                    "rectangles",
                    "Fahrenheit",
                    "given",
                    "supports",
                    "include",
                    "Celsius",
                    "features",
                    "handling",
                    "calculating",
                    "operations",
                    "number",
                    "modulus",
                    "Armstrong",
                    "uploaded",
                    "+",
                    "Random",
                    "Generate",
                    "N",
                    "Multipication",
                    "Hypotenuse",
                    "Number.15",
                    "digit",
                    "Basic-Calc-in-multiple-languages",
                    "Power",
                    "Triangle",
                    "Numbers.3",
                    "/",
                    "Exponenent.8",
                    "Celcius",
                    "Get",
                    "sum",
                    "Subtraction",
                    "Circle",
                    "Length",
                    "Features:1",
                    "Division",
                    "using",
                    "Base",
                    "Transpose",
                    "Perimeter",
                    "Table",
                    "Features",
                    "Numbers.2",
                    "Number",
                    "Number.9",
                    "Area.13",
                    "Rectangle",
                    "Area",
                    "Matrices",
                    "Diagonal",
                    "Radius",
                    "*",
                    "Find",
                    "cubes",
                    "Width.14",
                    "Addition",
                    "Reverse",
                    "Programs",
                    "Numbers.4",
                    "Numbers.5",
                    "Fahrenheit",
                    "%",
                    "Circumference",
                    "Hypotenuse.7",
                    "Diameter",
                    "Converter.10",
                    "Number.11",
                    "Number.12",
                    "number",
                    "Tables",
                    "i.e.",
                    "Armstrong",
                    "Matrix.More",
                    "Converter",
                    "Numbers.6"
                ],
                "annotation": "The given text is a description of a basic calculator program that supports multiple features and operations across different programming languages. The described features include a range of basic arithmetic operations such as addition, subtraction, multiplication, division, and modulus. It also offers functionality for finding the hypotenuse of a triangle, calculating the power of a number, generating random numbers, converting temperatures between Celsius and Fahrenheit, checking Armstrong numbers, reversing numbers, and performing various geometric calculations for circles and rectangles. Additionally, it supports generating multiplication tables and handling matrix operations such as addition, subtraction, multiplication, and transposition. The description mentions that more features and programs in additional languages will be added in the future.",
                "content": "# Basic-Calc-in-multiple-languages \n\n### Features:\n1. Addition + - Addition of N Numbers.\n2. Subtraction - - Subtraction of N Numbers.\n3. Multipication * - Multipication of Two Numbers.\n4. Division / - Division of two Numbers.\n5. Modulus % - Modulus of Two Numbers.\n6. Hypotenuse - Find Any Triangle's Hypotenuse.\n7. Power of a Number - Find any Number Power using Base and Exponenent.\n8. Random Number - Generate any Random Number.\n9. Converter - Celcius to Fahrenheit and Fahrenheit to Celcius Converter.\n10. Armstrong Number - You can Find any number is the sum of cubes of each digit is equal to the number itself or Not i.e., Armstrong Number.\n11. Reverse a Number - Reverse any Number.\n12. Circle - To Find Radius, Diameter, Circumference and Area.\n13. Rectangle - To Find Area, Diagonal, Perimeter, Length and Width.\n14. Tables - You can Get any Table of any Number.\n15. Matrices - Addition, Subtraction, Multipication of two Matrices and Transpose of a Matrix.\n\nMore Features will be uploaded soon.\n\n\nMore Language Programs will be uploaded soon\n",
                "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/README.md"
            }
        },
        {
            "score": 0.3333333333333333,
            "matched_keywords": [
                "multiplication"
            ],
            "node": {
                "name": "calc.java",
                "path": "Basic-Calc/calc.java",
                "type": "file",
                "keywords": [
                    "numbers",
                    "achieve",
                    "flow",
                    "conversion",
                    "calculation",
                    "application",
                    "prompted",
                    "based",
                    "uses",
                    "functionalities",
                    "addition",
                    "division",
                    "Math",
                    "loop",
                    "multiplication",
                    "written",
                    "chosen",
                    "implements",
                    "option",
                    "approach",
                    "generating",
                    "selected",
                    "subtraction",
                    "case",
                    "Java",
                    "varies",
                    "expected",
                    "input",
                    "Exit",
                    "code",
                    "power",
                    "output",
                    "according",
                    "program",
                    "provides",
                    "printed",
                    "hypotenuse",
                    "Scanner",
                    "control",
                    "exits",
                    "represents",
                    "used",
                    "instances",
                    "user",
                    "choice",
                    "result",
                    "calculating",
                    "structures",
                    "action",
                    "modulus",
                    "performed",
                    "operation",
                    "temperature",
                    "corresponding",
                    "+",
                    "=",
                    "Math.sqrt",
                    "Rows",
                    "\\nDivision\\n",
                    "Hypotenuse",
                    "element",
                    "area",
                    "radius",
                    "/",
                    "\\n12",
                    "d\\t",
                    "Sum",
                    "pow.nextInt",
                    "revNum",
                    "circle.nextInt",
                    "Circle",
                    "\\nThe",
                    "\\n",
                    "min",
                    "x",
                    "\\n4",
                    "Perimeter",
                    "Integer",
                    "System.out.format",
                    "void",
                    "Rectangle",
                    "\\n9",
                    "\\n13",
                    "Raised",
                    "randNumber",
                    "length",
                    "Product",
                    "Radius",
                    "*",
                    "-=",
                    "con.nextInt",
                    "H\\033",
                    "ce+",
                    "Divison",
                    "matrix1",
                    "rectangle.nextInt",
                    "diagonal",
                    "Diameter",
                    "result",
                    "Matrix",
                    "\\n16",
                    "import",
                    "\\nEnter",
                    "multiply",
                    "remainder",
                    "con",
                    "Armstrong",
                    "diameter",
                    "num.nextInt",
                    "\\n14",
                    "\\nAddition\\n",
                    "Random",
                    "elements",
                    "rectangle.nextDouble",
                    "Power",
                    "calc.nextInt",
                    "k",
                    "Columns",
                    "numS",
                    "rectangleArea",
                    "b",
                    "oexp",
                    "Subtraction",
                    "matrix",
                    "int",
                    "\\n2",
                    "Division",
                    "Second",
                    "String",
                    "Transpose",
                    "Table",
                    "\\n6",
                    "perimeter",
                    "+=",
                    "Rectangle\\n1",
                    "System.out.print",
                    "option1",
                    "Area",
                    "Exponent",
                    "Element",
                    "\\nMultipication\\n",
                    "j",
                    "tables.nextInt",
                    "Elements",
                    "matrix2",
                    "[",
                    "break",
                    "Celsius",
                    "rows1",
                    "n",
                    "circumference",
                    "<",
                    "\\033",
                    "ce",
                    "Converter",
                    "\\n15",
                    "System.out.println",
                    "id",
                    "rSum",
                    "matrix.nextInt",
                    "\\nModulus\\n",
                    "Printing",
                    "randN.nextInt",
                    "c",
                    "switch",
                    "j++",
                    "circle",
                    "calc",
                    "tNum",
                    "option",
                    "Length",
                    "tables",
                    "columns",
                    "B",
                    "Visiting\\n",
                    "Reversed",
                    "class",
                    "revNum.nextInt",
                    "case",
                    "ae",
                    "\\n11",
                    "pow",
                    "++i",
                    "Numbers",
                    "java.util",
                    "Matrices",
                    "SUM",
                    "Scanner",
                    "cel",
                    "rev",
                    "Reverse",
                    "e",
                    "rows",
                    "Fahrenheit",
                    "exp",
                    "checked",
                    "]",
                    "cant",
                    "Modulus",
                    "Math.random",
                    "\\nSubtraction\\n",
                    "number",
                    "Tables",
                    "rnum",
                    "randN",
                    "columns1",
                    "temp+",
                    "Multipication",
                    "transpose",
                    "see",
                    "max",
                    "Width",
                    "rectangle",
                    "base",
                    "\\n8",
                    "Base",
                    "Choice",
                    "First",
                    "System.in",
                    "Combination",
                    "i++",
                    "Difference",
                    "width",
                    "args",
                    "\\n10",
                    "Number",
                    "Exit",
                    "Diagonal",
                    "want",
                    "System.exit",
                    "side",
                    "circumference/",
                    "Temperature",
                    "multiplied",
                    "Addition",
                    "Enter",
                    "Whose",
                    "Substract",
                    "==",
                    "f",
                    "Circle\\n1",
                    "%",
                    "Circumference",
                    ">",
                    "choice",
                    "option2",
                    "z",
                    "\\n7",
                    "perimeter/2",
                    "\\n5",
                    "\\n3",
                    "temp"
                ],
                "annotation": "The code is written in Java. It implements a calculator application that provides various functionalities like addition, subtraction, multiplication, division, modulus, calculating hypotenuse, power, generating random numbers, temperature conversion, and more. A menu-driven approach is used within an infinite loop, where each case from 1 to 16 represents a different operation. The user is prompted to enter their choice, and based on the input, the corresponding mathematical or logical operation is performed and displayed. The program uses multiple Scanner instances for input, and standard Java Math and control flow structures to achieve the functionalities. The loop breaks and the program exits when option 16 (Exit) is selected. The expected output varies according to the chosen operation but is generally a printed result of the performed calculation or action.",
                "content": "import java.util.*;\n\npublic class calc {\n    public static void main(String[] args){\n        double a, b, c = 0, e = 0, x, y, z;\n        int d, numS;\n        Scanner calc = new Scanner(System.in);\n        System.out.print(\"\\033[H\\033[2J\");\n        while(e == 0){\n            System.out.println(\"\\n1. Addition + \\n2. Subtraction - \\n3. Multipication * \\n4. Division / \\n5. Modulus % \\n6. Hypotenuse \\n7. Power of a Number \\n8. Random Number \\n9. Converter \\n10. Armstrong Number \\n11. Reverse a Number \\n12. Circle \\n13. Rectangle \\n14. Tables \\n15. Matrices \\n16. Exit \\nEnter Your Choice: \\n\");\n        d = calc.nextInt();\n        switch(d){\n            case 1:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nAddition\\n\");\n                System.out.println(\"Enter How many Numbers you want to SUM: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 1; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c += a;\n                }\n                System.out.println(\"\\nThe Sum of \" + numS + \" Numbers is \" + c );\n                break;\n            case 2:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nSubtraction\\n\");\n                System.out.println(\"Enter How many Numbers you want to Substract: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter Number 1: \\n\");\n                c = calc.nextDouble();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 2; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c -= a;\n                }\n                System.out.println(\"\\nThe Difference of \" + numS + \" Numbers is \" + c );\n                break;\n            case 3:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nMultipication\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a * b;\n                System.out.println(\"\\nThe Combination of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 4:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nDivision\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a / b;\n                System.out.println(\"\\nThe Divison of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 5:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nModulus\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a % b;\n                System.out.println(\"\\nThe Modulus of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 6:\n                System.out.print(\"\\033[H\\033[2J\");\n                System.out.println(\"Enter side x: \");\n                x  = calc.nextDouble();\n                System.out.println(\"\\nEnter side y: \");\n                y = calc.nextDouble();\n                z = Math.sqrt((x * x) + (y * y));\n                System.out.println(\"The Hypotenuse is \" + z);\n                break;\n            case 7:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner pow = new Scanner(System.in);\n                int base, exp, oexp, result = 1;\n                System.out.println(\"Enter Base Number: \");\n                base = pow.nextInt();\n                System.out.println(\"Enter an Exponent: \");\n                exp = pow.nextInt();\n                oexp = exp;\n                while(exp != 0){\n                    result *= base;\n                    --exp;\n                }\n                System.out.println(\"The Power of \" + base + \" Raised to \" + oexp + \" is \" + result);\n                break;\n            case 8:\n                System.out.print(\"\\033[H\\033[2J\");\n                int min, max;\n                Scanner randN = new Scanner(System.in);\n                System.out.println(\"Enter the min number: \");\n                min  = randN.nextInt();\n                System.out.println(\"Enter the max number: \");\n                max = randN.nextInt();\n                int randNumber = (int)(Math.random() * (max - min + 1) + min);\n                System.out.println(\"Random Number Between \" + min + \" to \" + max + \" is \" + randNumber);\n                break;\n            case 9:\n                System.out.print(\"\\033[H\\033[2J\");\n                double f, cel; \n                int option;\n                Scanner con = new Scanner(System.in);\n                System.out.println(\"1. Celsius to Fahrenheit \\n2. Fahrenheit to Celsius \\nEnter Your Choice: \");\n                option = con.nextInt();\n                switch(option){\n                    case 1:\n                        System.out.println(\"Enter Temperature in Celsius: \");\n                        cel = con.nextDouble();\n                        f = (cel * 9/5) + 32;\n                        System.out.println(\"The Temperature of \" + cel + \" Celsius in Fahrenheit is: \" + f);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Temperature in Fahrenheit: \");\n                        f = con.nextDouble();\n                        cel = (f - 32) * 5/9;\n                        System.out.println(\"The Temperature of \" + f + \" Fahrenheit in Celsius is: \" + cel);\n                        break;\n                }\n                break;\n            case 10:\n                System.out.print(\"\\033[H\\033[2J\");\n                int ce = 0, ae, temp, n;\n                Scanner num = new Scanner(System.in);\n                System.out.print(\"Enter number to be checked: \");\n                n = num.nextInt();\n                temp = n;\n                while(n > 0){\n                    ae = n % 10;\n                    n = n/10;\n                    ce = ce+(ae*ae*ae);\n                }\n                if(temp == ce){\n                    System.out.println(temp+\" is an Armstrong Number.\");\n                }else{\n                    System.out.println(temp+\" is not an Armstrong Number.\");\n                }\n                break;\n            case 11:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner revNum = new Scanner(System.in);\n                int rnum, rev = 0, remainder;\n                System.out.println(\"Enter an Integer: \");\n                rnum = revNum.nextInt();\n                while(rnum != 0){\n                    remainder = rnum % 10;\n                    rev = rev * 10 + remainder;\n                    rnum /= 10;\n                }\n                System.out.println(\"Reversed Number of \" + rnum + \" is \" + rev);\n                break;\n            case 12:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner circle = new Scanner(System.in);\n                double radius, circumference, area, diameter;\n                int choice;\n                System.out.println(\"Circle\\n1. Radius \\n2. Diameter \\n3. Circumference \\n4. Area \\nEnter Your Choice: \");\n                choice = circle.nextInt();\n                switch(choice){\n                    case 1:\n                        System.out.println(\"Enter Circumference of Circle: \");\n                        circumference = circle.nextDouble();\n                        radius = circumference/(2 * 3.14);\n                        System.out.println(\"Radius of Circumference \" + circumference + \" = \" + radius);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        diameter = 2 * radius;\n                        System.out.println(\"The Diameter of radius \" + radius + \" Circle = \" + diameter);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        circumference = 2 * 3.14 * radius;\n                        System.out.println(\"The Circumference of Radius \" + radius + \" Circle = \" + circumference);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        area = 3.14 * radius * radius;\n                        System.out.println(\"The Area of Radius \" + radius + \" Circle = \" + area);\n                        break;\n                }\n                break;\n            case 13:\n                System.out.print(\"\\033[H\\033[2J\");\n                double length, width, rectangleArea, perimeter, diagonal;\n                int option1;\n                Scanner rectangle = new Scanner(System.in);\n                System.out.println(\"Rectangle\\n1. Area \\n2. Diagonal \\n3. Perimeter \\n4. Length \\n5. Width \\nEnter Your Choice: \");\n                option1 = rectangle.nextInt();\n                switch(option1){\n                    case 1:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        rectangleArea = length * width;\n                        System.out.println(\"The Area of the Rectangle \" + length + \" Length \" + width + \" Width is \" + rectangleArea);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        diagonal = Math.sqrt((length * length) + (width * width));\n                        System.out.println(\"The Diagonal of the Rectangle \" + length + \" Length \" + width + \" width is \" + diagonal);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        perimeter = 2 * (length + width);\n                        System.out.println(\"The Perimeter of the Rectangle \" + length + \" Length \" + width + \" width is \" + perimeter);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        length = (perimeter/2) - width;\n                        System.out.println(\"The Length of Rectangle whose Perimeter = \" + perimeter + \" and Width = \" + width + \" is \" + length);\n                        break;\n                    case 5:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        width = (perimeter/2) - length;\n                        System.out.println(\"The Width of Rectangle whose Perimeter = \" + perimeter + \" and Length = \" + length + \" is \" + width);\n                        break;\n                }\n                break;\n            case 14:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner tables = new Scanner(System.in);\n                int tNum;\n                System.out.println(\"Enter a Number Whose Table you want to see: \");\n                tNum = tables.nextInt();\n                System.out.println(\"\\n\" + tNum + \" x 1 = \" + tNum * 1 + \" \\n\");\n                System.out.println(tNum + \" x 2 = \" + tNum * 2 + \" \\n\");\n                System.out.println(tNum + \" x 3 = \" + tNum * 3 + \" \\n\");\n                System.out.println(tNum + \" x 4 = \" + tNum * 4 + \" \\n\");\n                System.out.println(tNum + \" x 5 = \" + tNum * 5 + \" \\n\");\n                System.out.println(tNum + \" x 6 = \" + tNum * 6 + \" \\n\");\n                System.out.println(tNum + \" x 7 = \" + tNum * 7 + \" \\n\");\n                System.out.println(tNum + \" x 8 = \" + tNum * 8 + \" \\n\");\n                System.out.println(tNum + \" x 9 = \" + tNum * 9 + \" \\n\");\n                System.out.println(tNum + \" x 10 = \" + tNum * 10 + \" \\n\");\n                break;\n            case 15:\n                System.out.print(\"\\033[H\\033[2J\");\n                int rows, rows1, columns, columns1, option2, i, j, k, rSum = 0;\n                int[][] matrix1 = new int[100][100], matrix2 = new int[100][100], mSum = new int[100][100];\n                Scanner matrix = new Scanner(System.in);\n                System.out.println(\"1. Addition \\n2. Subtraction \\n3. Multipication \\n4. Transpose \\nEnter Your Choice: \");\n                option2 = matrix.nextInt();\n                switch(option2){\n                    case 1:\n                        System.out.println(\"Enter Number of Rows: \");\n                        rows = matrix.nextInt();\n                        System.out.println(\"Enter Number of Columns: \");\n                        columns = matrix.nextInt();\n                        System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                            matrix1[i][j] = matrix.nextInt();\n                            }\n                        }\n                        System.out.println(\"Enter element of 2nd matrix: \");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                                matrix2[i][j] = matrix.nextInt();\n                                }\n                            }\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                mSum[i][j] = matrix1[i][j] + matrix2[i][j];\n                            }\n                        }\n                        System.out.println(\"\\nSum of Two Matrices: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"%d \", mSum[i][j]);\n                                if(j == columns - 1){\n                                    System.out.println(\"\\n\");\n                                }\n                            }\n                        }\n                break;\n                case 2:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter element of 2nd matrix: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                            matrix2[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            mSum[i][j] = matrix1[i][j] - matrix2[i][j];\n                        }\n                    }\n                    System.out.println(\"\\nDifference of Two Matrices: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"%d \", mSum[i][j]);\n                            if(j == columns - 1){\n                                System.out.println(\"\\n\");\n                            }\n                        }\n                    }\n                    break;\n                case 3:\n                    System.out.println(\"Enter the number of rows of Matrix 1: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 1: \");\n                    columns = matrix.nextInt();\n                    matrix1 = new int[rows][columns];\n                    System.out.println(\"Enter elements of Matrix 1: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter the number of rows of Matrix 2: \");\n                    rows1 = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 2: \");\n                    columns1 = matrix.nextInt();\n                    if(columns != rows1){\n                        System.out.println(\"The Matrices cant be multiplied with each other as Number of columns of Matrix 1 id not equal to Number of rows of Matrix 2.\");\n                    }else{\n                        int[][] second = new int[rows1][columns1];\n                        int[][] multiply = new int[rows][columns1];\n                    System.out.println(\"Enter Elements of Matrix 2: \");\n                    for(i = 0; i < rows1; ++i){\n                        for(j = 0; j < columns1; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                second[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            for(k = 0; k < rows1; k++){\n                                rSum = rSum + matrix1[i][k] * second[k][j];\n                            }\n                            multiply[i][j] = rSum;\n                            rSum = 0;\n                        }\n                    }\n                    System.out.println(\"Product of the Matrices: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0;j < columns1; j++){\n                            System.out.format(\"%d\\t\", multiply[i][j]);\n                            if(j == columns1 - 1){\n                            System.out.print(\"\\n\");\n                            }\n                        }\n                    }\n                    }\n                    break;\n                case 4:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of the matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"The Matrix is: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(matrix1[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    int[][] transpose = new int[columns][rows];\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            transpose[i][j] = matrix1[j][i];\n                        }\n                    }\n                    System.out.println(\"Printing Matrix After Transpose: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(transpose[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    break;\n                }\n                break;\n            case 16:\n                System.out.print(\"\\033[H\\033[2J\");\n                e = 1;\n                System.out.println(\"\\nThank You For Visiting\\n\");\n                System.exit(0);\n                break;\n        }\n        } calc.close();\n    } \n}\n",
                "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.java"
            }
        },
        {
            "score": 0.3333333333333333,
            "matched_keywords": [
                "multiplication"
            ],
            "node": {
                "name": "calc.py",
                "path": "Basic-Calc/calc.py",
                "type": "file",
                "keywords": [
                    "conversion",
                    "displays",
                    "utility",
                    "offers",
                    "area",
                    "based",
                    "interactions",
                    "results",
                    "addition",
                    "division",
                    "messages",
                    "inputs",
                    "imports",
                    "multiplication",
                    "equations",
                    "solving",
                    "function",
                    "triangle",
                    "module",
                    "subtraction",
                    "solutions",
                    "expected",
                    "prompts",
                    "input",
                    "tasks",
                    "invokes",
                    "code",
                    "output",
                    "converter",
                    "printed",
                    "menu",
                    "options",
                    "printing",
                    "handles",
                    "text",
                    "screen",
                    "corresponding",
                    "celsius",
                    "formatted",
                    "system",
                    "operations",
                    "fahrenheit",
                    "interface",
                    "math",
                    "calculations",
                    "console",
                    "temperature",
                    "Python",
                    "+",
                    "=",
                    "message",
                    "sqrtdef",
                    "systemfrom",
                    "Print\\n",
                    "Division\\n5",
                    "Side",
                    "c",
                    "area",
                    "x^2",
                    "/2",
                    "addition",
                    "division",
                    "print",
                    "/",
                    "b",
                    "root",
                    "Value",
                    "\\nMultipication",
                    "option",
                    "int",
                    "Roots",
                    "triangle",
                    "elif",
                    "using",
                    "x",
                    "Function",
                    "'cls",
                    "Choice",
                    "Fahrenheit\\n2",
                    "def",
                    "Multipication\\n4",
                    "World\\",
                    "Solutions\\n7",
                    "World",
                    "Celsius\\n",
                    "input",
                    "Addition\\n2",
                    "Number",
                    "option1",
                    "Area",
                    "Printed",
                    "multipication",
                    "converter",
                    "*",
                    "roots",
                    "printing",
                    "Temperature",
                    "cel",
                    "Enter",
                    "float",
                    "substraction",
                    "-b",
                    "f",
                    "Disctiminant",
                    "%",
                    "Fahrenheit",
                    "\\nDifference",
                    "celsius",
                    "r",
                    "switchers",
                    "Hello",
                    "switchers.get",
                    "Converter\\n8",
                    "Celsius",
                    "system",
                    "import",
                    "Triangle\\n6",
                    "\\nDivision",
                    "fahrenheit",
                    "Subtraction\\n3",
                    "math",
                    "sqrt"
                ],
                "annotation": "This Python code is a console-based utility that offers various mathematical and conversion operations through a menu-driven interface. It imports system from the os module to clear the screen and sqrt from the math module for quadratic calculations. The main() function displays a menu of options (addition, subtraction, multiplication, division, area of a triangle, quadratic solutions, temperature conversion, and printing messages) and invokes the corresponding function based on user input. Each function handles specific tasks, like arithmetic operations (addition, subtraction, multiplication, division), geometric calculations (triangle for area), solving quadratic equations (quadratic), temperature conversion (converter, celsius, fahrenheit), and printing text (printing). The expected output is based on user interactions and inputs, with clear prompts and formatted results printed to the console.",
                "content": "from os import system\nfrom math import sqrt\n\ndef main():\n    system('cls');\n    print(\"1. Addition\\n2. Subtraction\\n3. Multipication\\n4. Division\\n5. Area of Triangle\\n6. Quadratic Solutions\\n7. Converter\\n8. Print\\n\")\n    option = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: addition,\n        2: substraction,\n        3: multipication,\n        4: division,\n        5: triangle,\n        6: quadratic,\n        7: converter,\n        8: printing\n    }\n    switchers.get(option)()\n\ndef addition():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a + b\n    print(\"\\nSum of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef substraction():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a - b\n    print(\"\\nDifference of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef multipication():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a * b\n    print(\"\\nMultipication of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef division():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a / b\n    print(\"\\nDivision of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef triangle():\n    system('cls')\n    a = float(input(\"Enter 1st Side: \"))\n    b = float(input(\"Enter 2st Side: \"))\n    c = float(input(\"Enter 3st Side: \"))\n    s = (a + b + c)/2\n    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5  \n    print('The area of the triangle is %0.2f' %area)\n\ndef quadratic():\n    system('cls')\n    print(\"Quadratic Function : (a * x^2) + b*x + c\")\n    a = float(input(\"Enter Value of a: \"))\n    b = float(input(\"Enter Value of b: \"))\n    c = float(input(\"Enter Value of c: \"))\n\n    r = b**2 - 4*a*c;\n    if r > 0:\n        roots = 2\n        x = (((-b) + sqrt(r))/(2*a))\n        y = (((-b) + sqrt(r))/(2*a))\n        print(\"There are two roots: %f an d %f\" % (x, y))\n    elif r == 0:\n        roots = 1\n        x = (-b) / 2*a\n        print(\"There is 1 root: \", x)\n    else:\n        roots = 0\n        print(\"No Roots, Disctiminant is less than 0.\")\n\ndef converter():\n    system('cls')\n    print(\"1. Celsius to Fahrenheit\\n2. Fahrenheit to Celsius\\n\")\n    option1 = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: celsius,\n        2: fahrenheit\n    }\n    switchers.get(option1)()\n\ndef celsius():\n    system('cls')\n    cel = float(input(\"Enter Temperature in Celsius: \"))\n    f = (cel * 9/5) + 32;\n    print(\"The Temperature of %f Celsius in Fahrenheit is : %f\" % (cel, f))\ndef fahrenheit():\n    system('cls')\n    f = float(input(\"Enter Temperature in Fahrenheit: \"))\n    cel = (f - 32) * 5/9\n    print(\"The Temperature of %f Fahrenheit in Celsius is : %f\" % (f, cel))\n\ndef printing():\n    system('cls')\n    print(\"\\\"Hello World\\\"\")\n    print('\\'Hello World\\'')\n    message = \"Hello World (Printed using a variable)\"\n    print(message)\n\nmain()\n",
                "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.py"
            }
        },
        {
            "score": 0.3333333333333333,
            "matched_keywords": [
                "multiplication"
            ],
            "node": {
                "name": "calc.rs",
                "path": "rust-calculator/src/calc.rs",
                "type": "file",
                "keywords": [
                    "numbers",
                    "elements",
                    "associated",
                    "computes",
                    "sequence",
                    "element",
                    "mul",
                    "subsequent",
                    "pass",
                    "dividing",
                    "results",
                    "yielding",
                    "addition",
                    "division",
                    "inputs",
                    "multiplication",
                    "written",
                    "taking",
                    "implements",
                    "intended",
                    "functions",
                    "lt",
                    "Rust",
                    "operating",
                    "vector",
                    "calculator",
                    "subtracting",
                    "Vec",
                    "subtraction",
                    "functionality",
                    "predefined",
                    "expected",
                    "input",
                    "gt",
                    "code",
                    "annotation",
                    "verifying",
                    "multiplies",
                    "sub",
                    "div",
                    "signifies",
                    "tests",
                    "]",
                    "result",
                    "operations",
                    "test",
                    "add",
                    "work",
                    "unit",
                    "Calc",
                    "struct",
                    "assert_eq",
                    "std",
                    ".unwrap_or",
                    "Sub",
                    "mul",
                    ".to_vec",
                    "arr.iter",
                    "Div",
                    "|",
                    "-3.0",
                    "f64",
                    "addition",
                    ":div",
                    "division",
                    ":sub",
                    "multiplication",
                    ".fold1",
                    ":Itertools",
                    "test_all_operations",
                    "x",
                    "Vec",
                    "subtraction",
                    "-6.0",
                    "x|",
                    ".product",
                    "pub",
                    "use",
                    ":mul",
                    "sub",
                    "div",
                    "arr",
                    "fn",
                    ">",
                    "itertools",
                    ":add",
                    "]",
                    ".sum",
                    "test",
                    ":ops",
                    "add",
                    "<",
                    ".map",
                    "Calc",
                    "struct"
                ],
                "annotation": "The code is written in Rust and implements a basic calculator with four operations: addition, subtraction, multiplication, and division, each operating on a vector of floating-point numbers. The Calc struct has associated functions add, sub, mul, and div, each taking a Vec&lt;f64&gt; as input. add computes the sum of the elements, sub computes the result of subtracting all subsequent elements from the first, mul multiplies all elements together, and div computes the result of dividing the first element by each subsequent element in sequence. The #[test] annotation signifies a unit test, verifying the functionality of these operations with predefined inputs and expected outputs. If the tests pass, functions work as intended, with expected results such as addition yielding 12.0 for [2.0, 4.0, 6.0] and division yielding 9.0 for [54.0, 2.0, 3.0].",
                "content": "use itertools::Itertools;\nuse std::ops::{Div, Sub};\n\npub struct Calc;\n\nimpl Calc {\n    pub fn add(arr: Vec<f64>) -> f64 {\n        arr.iter().sum::<f64>()\n    }\n\n    pub fn sub(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Sub::sub).unwrap_or(0.0)\n    }\n\n    pub fn mul(arr: Vec<f64>) -> f64 {\n        arr.iter().product()\n    }\n\n    pub fn div(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Div::div).unwrap_or(0.0)\n    }\n}\n\n#[test]\nfn test_all_operations() {\n    // addition\n    assert_eq!(Calc::add([2.0, 4.0, 6.0].to_vec()), 12.0);\n    assert_eq!(Calc::add([-6.0, 5.0, 10.0].to_vec()), 9.0);\n\n    // subtraction\n    assert_eq!(Calc::sub([10.0, 4.0, 6.0].to_vec()), 0.0);\n    assert_eq!(Calc::sub([100.0, 10.0, 19.0].to_vec()), 71.0);\n\n    // multiplication\n    assert_eq!(Calc::mul([10.0, 10.0, 2.0].to_vec()), 200.0);\n    assert_eq!(Calc::mul([-3.0, 2.0].to_vec()), -6.0);\n\n    // division\n    assert_eq!(Calc::div([54.0, 2.0, 3.0].to_vec()), 9.0);\n    assert_eq!(Calc::div([4.0, 2.0, 5.0].to_vec()), 0.4);\n}\n",
                "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/calc.rs"
            }
        },
        {
            "score": 0.3333333333333333,
            "matched_keywords": [
                "multiplication"
            ],
            "node": {
                "name": "main.rs",
                "path": "rust-calculator/src/main.rs",
                "type": "file",
                "keywords": [
                    "numbers",
                    "+",
                    "calculation",
                    "applies",
                    "methods",
                    "splits",
                    "results",
                    "addition",
                    "division",
                    "/",
                    "inputs",
                    "multiplication",
                    "written",
                    "Calc",
                    "implements",
                    "function",
                    "Rust",
                    "using",
                    "calculator",
                    "e.g.",
                    "module",
                    "perform",
                    "subtraction",
                    "quit",
                    "checks",
                    "expected",
                    "valid",
                    "prompts",
                    "input",
                    "reads",
                    "appropriate",
                    "code",
                    "enter",
                    "output",
                    "parses",
                    "printed",
                    "parts",
                    "exits",
                    "equation",
                    "q",
                    "operators",
                    "user",
                    "result",
                    "provided",
                    "operation",
                    "+",
                    "=",
                    "built",
                    "operator",
                    "match",
                    ".collect",
                    "std",
                    "_",
                    "mut",
                    ".expect",
                    "Thanks",
                    "str",
                    ".trim",
                    "f64",
                    "addition",
                    ":div",
                    "calc",
                    "\\",
                    "/",
                    ":sub",
                    "multiplication",
                    "Calc",
                    "Welcome",
                    "panic",
                    "division",
                    "supported",
                    "continue",
                    "Rust",
                    "using",
                    "valid_operators",
                    "calculator",
                    "String",
                    "q\\",
                    "Vec",
                    ":new",
                    "subtraction",
                    "quit",
                    "println",
                    "counter",
                    "+=",
                    ".read_line",
                    "input",
                    "io",
                    ":io",
                    "Failed",
                    "let",
                    "input.split",
                    "program",
                    "mod",
                    "*",
                    ":mul",
                    ".ok",
                    "parts",
                    "equation",
                    "Enter",
                    "None",
                    "==",
                    "[",
                    ">",
                    "input.find",
                    ":add",
                    "val",
                    "]",
                    "break",
                    "vec",
                    "Invalid",
                    "number",
                    ":stdin",
                    "<",
                    "Please",
                    ":Calc",
                    "parts.len",
                    "read"
                ],
                "annotation": "The provided code is written in Rust and implements a basic command-line calculator that can perform addition, subtraction, multiplication, and division. The main function continuously prompts the user to enter an equation or \"q\" to quit. It reads the user input, checks for valid operators (+, -, *, /), splits the equation into parts, parses them as numbers, and applies the appropriate arithmetic operation using methods from the Calc module. The results are then printed out. The loop exits if the user inputs \"q\". The expected output for any valid input equation, such as \"3 + 4\", would be the result of the calculation, e.g., \"7\".",
                "content": "mod calc;\nuse calc::Calc;\nuse std::io;\n\nfn main() {\n    println!(\"Welcome to the a basic calculator built with Rust.\");\n\n    loop {\n        println!(\"Please enter an equation or \\\"q\\\" to quit: \");\n\n        let mut input = String::new();\n        io::stdin()\n            .read_line(&mut input)\n            .expect(\"Failed to read input\");\n\n        if input.trim() == \"q\" {\n            println!(\"Thanks for using this program.\");\n            break;\n        }\n\n        let valid_operators = vec![\"+\", \"-\", \"*\", \"/\"];\n\n        for operator in valid_operators {\n            match input.find(operator) {\n                Some(_) => {\n                    let parts: Vec<&str> = input.split(operator).collect();\n\n                    if parts.len() < 2 {\n                        panic!(\"Invalid equation.\");\n                    }\n\n                    let mut number_array = vec![];\n                    let mut counter = 0;\n\n                    while counter != parts.len() {\n                        let val: f64 = parts[counter].trim().parse().ok().expect(\"Enter a number.\");\n                        number_array.push(val);\n                        counter += 1;\n                    }\n\n                    match operator {\n                        \"+\" => println!(\"{}\", Calc::add(number_array)),\n                        \"-\" => println!(\"{}\", Calc::sub(number_array)),\n                        \"*\" => println!(\"{}\", Calc::mul(number_array)),\n                        \"/\" => println!(\"{}\", Calc::div(number_array)),\n                        _ => println!(\"Only addition, subtraction, multiplication and division are supported.\")\n                    }\n                }\n\n                None => {\n                    continue;\n                }\n            }\n        }\n    }\n}\n",
                "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/main.rs"
            }
        }
    ]
}