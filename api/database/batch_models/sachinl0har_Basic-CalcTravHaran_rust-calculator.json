{
    "results": [
        {
            "name": "TravHaran/rust-calculator",
            "path": "rust-calculator/",
            "type": "folder",
            "keywords": [],
            "children": [
                {
                    "name": "Cargo.lock",
                    "path": "rust-calculator/Cargo.lock",
                    "type": "file",
                    "keywords": [
                        "automated",
                        "manager",
                        "package",
                        "dependencies",
                        "packages",
                        "checksum",
                        "registry",
                        "file",
                        "management",
                        "facilitates",
                        "used",
                        "calc",
                        "TOML",
                        "sources",
                        "depends",
                        "Rust",
                        "format",
                        "configuration",
                        "version",
                        "code",
                        "track",
                        "unique",
                        "Dependencies",
                        "lists",
                        "itertools",
                        "verification",
                        "crates.io",
                        "linked",
                        "Cargo",
                        "defines",
                        "project",
                        "package",
                        "dependencies",
                        "name",
                        "checksum",
                        "file",
                        "registry+https",
                        "intended",
                        "calc",
                        "version",
                        "source",
                        "generated",
                        "=",
                        "editing",
                        "Cargo.",
                        "]",
                        "itertools",
                        "[",
                        "//github.com/rust-lang/crates.io-index",
                        "@"
                    ],
                    "annotation": "The code is in a TOML format and defines a configuration file typically used by Cargo, the Rust package manager, to track project dependencies. It lists three packages: \"calc\" version 0.1.0, \"either\" version 1.6.1, and \"itertools\" version 0.10.0. The \"itertools\" package depends on \"either\". Dependencies are linked to their respective sources from the Rust crates.io registry, and each one has a unique checksum for verification. This file facilitates the automated management of these packages in a Rust project.",
                    "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\n[[package]]\nname = \"calc\"\nversion = \"0.1.0\"\ndependencies = [\n \"itertools\",\n]\n\n[[package]]\nname = \"either\"\nversion = \"1.6.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e78d4f1cc4ae33bbfc157ed5d5a5ef3bc29227303d595861deb238fcec4e9457\"\n\n[[package]]\nname = \"itertools\"\nversion = \"0.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d572918e350e82412fe766d24b15e6682fb2ed2bbe018280caa810397cb319\"\ndependencies = [\n \"either\",\n]\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/Cargo.lock"
                },
                {
                    "name": "Cargo.toml",
                    "path": "rust-calculator/Cargo.toml",
                    "type": "file",
                    "keywords": [
                        "Obvious",
                        "edition",
                        "information",
                        "manager",
                        "dependencies",
                        "package",
                        "specifies",
                        "name",
                        "author",
                        "file",
                        "used",
                        "calc",
                        "TOML",
                        "Rust",
                        "configuration",
                        "version",
                        "code",
                        "Tom",
                        "build",
                        "case",
                        "section",
                        "lists",
                        "]",
                        "itertools",
                        "[",
                        "written",
                        "crate",
                        "Language",
                        "Cargo",
                        "defines",
                        "Minimal",
                        "manage",
                        "project",
                        "required",
                        "edition",
                        "https",
                        "package",
                        "dependencies",
                        "name",
                        "<",
                        "definitions",
                        "calc",
                        "version",
                        "=",
                        "keys",
                        "]",
                        "itertools",
                        "Boisdequin",
                        "[",
                        "@",
                        ">",
                        "See",
                        "Henry",
                        "authors"
                    ],
                    "annotation": "The code is a configuration file written in TOML (Tom's Obvious, Minimal Language) for a Rust project. It specifies the project's metadata and dependencies. The [package] section defines the package name \"calc\", version \"0.1.0\", author information, and the Rust edition \"2018\". The [dependencies] section lists the dependencies required by the project, in this case, the \"itertools\" crate with version \"0.10\". This file is used by Cargo, Rust's package manager, to manage and build the project.",
                    "content": "[package]\nname = \"calc\"\nversion = \"0.1.0\"\nauthors = [\"Henry Boisdequin <65845077+henryboisdequin@users.noreply.github.com>\"]\nedition = \"2018\"\n\n# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html\n\n[dependencies]\nitertools = \"0.10\"\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/Cargo.toml"
                },
                {
                    "name": "README.md",
                    "path": "rust-calculator/README.md",
                    "type": "file",
                    "keywords": [
                        "installed",
                        "cargo",
                        "repository",
                        "manager",
                        "package",
                        "using",
                        "provided",
                        "instructs",
                        "testing",
                        "help",
                        "program",
                        "directory",
                        "used",
                        "Rust",
                        "navigate",
                        "application",
                        "run",
                        "command",
                        "instructions",
                        "clone",
                        "users",
                        "steps",
                        "functionality",
                        "calculator",
                        "set",
                        "written",
                        "Cargo",
                        "test",
                        "outlines",
                        "project",
                        "ensure",
                        "directory",
                        "Make",
                        "cargo",
                        "calculator",
                        "installed3",
                        "Rust",
                        "test",
                        "repository2",
                        "Cd",
                        "type",
                        "run",
                        "Rust.",
                        "project",
                        "Run1",
                        "Clone"
                    ],
                    "annotation": "The provided text outlines steps to run and test a simple command-line calculator program written in Rust. It instructs users to clone a repository, ensure Rust and Cargo (Rust's package manager) are installed, navigate to the project directory, and execute the program using cargo run. For testing, the command cargo test should be used. These instructions help set up and verify the functionality of the calculator application.",
                    "content": "Simple command-line calculator in Rust.\n\n## To Run\n\n1. Clone this repository\n\n2. Make sure you have Rust and cargo installed\n\n3. Cd into the project directory and type `cargo run`\n\n4. To test: run `cargo test`\n",
                    "link": "https://github.com/TravHaran/rust-calculator/blob/master/README.md"
                },
                {
                    "name": "src",
                    "path": "rust-calculator/src",
                    "type": "folder",
                    "keywords": [],
                    "children": [
                        {
                            "name": "calc.rs",
                            "path": "rust-calculator/src/calc.rs",
                            "type": "file",
                            "keywords": [
                                "add",
                                "method",
                                "numbers",
                                "multiplies",
                                "sub",
                                "tests",
                                "implementation",
                                "iterator",
                                "provide",
                                "elements.The",
                                "verify",
                                "default",
                                "struct",
                                "results",
                                "processes",
                                "perform",
                                "addition",
                                "div",
                                "functions",
                                "values",
                                "Rust",
                                "error",
                                "sums",
                                "run",
                                "accompanying",
                                "vectors",
                                "elements",
                                "elements.mul",
                                "handling",
                                "code",
                                "expected",
                                "performs",
                                "Calc",
                                "vector",
                                "multiplication",
                                "subtraction",
                                "operations",
                                "correct",
                                "includes",
                                "written",
                                "returns",
                                "defines",
                                "methods",
                                "division",
                                "mul",
                                "confirmed",
                                "Div",
                                "add",
                                "sub",
                                ":div",
                                ".to_vec",
                                ":Itertools",
                                "<",
                                ".fold1",
                                "use",
                                "struct",
                                "fn",
                                "addition",
                                "arr.iter",
                                "f64",
                                "x",
                                "div",
                                "-3.0",
                                "assert_eq",
                                ":mul",
                                ".map",
                                ":ops",
                                "pub",
                                "-6.0",
                                "test_all_operations",
                                "Calc",
                                "multiplication",
                                "|",
                                "Sub",
                                "subtraction",
                                ".sum",
                                "x|",
                                "]",
                                "itertools",
                                "std",
                                "arr",
                                ":sub",
                                ":add",
                                "test",
                                ".product",
                                "Vec",
                                ">",
                                "division",
                                "mul",
                                ".unwrap_or"
                            ],
                            "annotation": "The code is written in Rust and defines a Calc struct with methods to perform basic arithmetic operations on vectors of floating-point numbers. It includes methods for addition (add), subtraction (sub), multiplication (mul), and division (div). Each method processes the elements of the vector accordingly:\n\nadd sums all elements.\nsub performs sequential subtraction on elements.\nmul multiplies all elements together.\ndiv performs sequential division on elements.\n\nThe methods utilize iterator functions and error handling to provide default values when necessary. The accompanying tests verify that each arithmetic method returns the expected results for various input vectors. If the tests run successfully, the implementation is confirmed to be correct.",
                            "content": "use itertools::Itertools;\nuse std::ops::{Div, Sub};\n\npub struct Calc;\n\nimpl Calc {\n    pub fn add(arr: Vec<f64>) -> f64 {\n        arr.iter().sum::<f64>()\n    }\n\n    pub fn sub(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Sub::sub).unwrap_or(0.0)\n    }\n\n    pub fn mul(arr: Vec<f64>) -> f64 {\n        arr.iter().product()\n    }\n\n    pub fn div(arr: Vec<f64>) -> f64 {\n        arr.iter().map(|&x| x as f64).fold1(Div::div).unwrap_or(0.0)\n    }\n}\n\n#[test]\nfn test_all_operations() {\n    // addition\n    assert_eq!(Calc::add([2.0, 4.0, 6.0].to_vec()), 12.0);\n    assert_eq!(Calc::add([-6.0, 5.0, 10.0].to_vec()), 9.0);\n\n    // subtraction\n    assert_eq!(Calc::sub([10.0, 4.0, 6.0].to_vec()), 0.0);\n    assert_eq!(Calc::sub([100.0, 10.0, 19.0].to_vec()), 71.0);\n\n    // multiplication\n    assert_eq!(Calc::mul([10.0, 10.0, 2.0].to_vec()), 200.0);\n    assert_eq!(Calc::mul([-3.0, 2.0].to_vec()), -6.0);\n\n    // division\n    assert_eq!(Calc::div([54.0, 2.0, 3.0].to_vec()), 9.0);\n    assert_eq!(Calc::div([4.0, 2.0, 5.0].to_vec()), 0.4);\n}\n",
                            "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/calc.rs"
                        },
                        {
                            "name": "main.rs",
                            "path": "rust-calculator/src/main.rs",
                            "type": "file",
                            "keywords": [
                                "q",
                                "/",
                                "numbers",
                                "string",
                                "performing",
                                "uses",
                                "floating",
                                "enter",
                                "perform",
                                "program",
                                "point",
                                "loop",
                                "f64",
                                "parses",
                                "*",
                                "parts",
                                "Rust",
                                "input",
                                "implements",
                                "converts",
                                "exits",
                                "code",
                                "operation",
                                "involves",
                                "module",
                                "message",
                                "expected",
                                "+",
                                "recognized",
                                "operators",
                                "Calc",
                                "enters",
                                "infinite",
                                "corresponding",
                                "requested",
                                "displaying",
                                "prompts",
                                "operator",
                                "checks",
                                "prints",
                                "calculator",
                                "equation",
                                "written",
                                "contains",
                                "result",
                                "quit",
                                "continues",
                                "splits",
                                "/",
                                "let",
                                "counter",
                                "panic",
                                "using",
                                ":div",
                                "<",
                                "Invalid",
                                "Enter",
                                ".ok",
                                ".read_line",
                                ".expect",
                                "input.find",
                                "println",
                                "io",
                                "mod",
                                "program",
                                ":new",
                                "vec",
                                "f64",
                                "addition",
                                "calc",
                                "*",
                                ".trim",
                                "match",
                                ":mul",
                                "parts",
                                "Rust",
                                "Please",
                                "input",
                                ".collect",
                                ":Calc",
                                "Thanks",
                                "break",
                                "String",
                                "mut",
                                "parts.len",
                                "+",
                                "Calc",
                                "input.split",
                                "multiplication",
                                "valid_operators",
                                "=",
                                ":io",
                                "str",
                                "+=",
                                "subtraction",
                                "operator",
                                "]",
                                "_",
                                "built",
                                "calculator",
                                "equation",
                                ":stdin",
                                "std",
                                "[",
                                "Failed",
                                "val",
                                "read",
                                "Welcome",
                                ":sub",
                                "supported",
                                "q\\",
                                "==",
                                ":add",
                                "Vec",
                                "None",
                                ">",
                                "\\",
                                "division",
                                "number",
                                "quit",
                                "continue"
                            ],
                            "annotation": "The code is written in Rust and implements a basic interactive calculator. After displaying a welcome message, the program enters an infinite loop where it repeatedly prompts the user to enter a mathematical equation or \"q\" to quit. For each input, it checks for common arithmetic operators (\"+\", \"-\", \"*\", \"/\") and parses the input accordingly. If the input contains a recognized operator, it splits the input string into numerical parts, converts them to f64 (floating point numbers), and uses a Calc module to perform the corresponding arithmetic operation, then prints the result. The loop continues until the user enters \"q\", at which point the program exits with a thank-you message. The expected behavior involves performing and displaying the result of the requested arithmetic operation.",
                            "content": "mod calc;\nuse calc::Calc;\nuse std::io;\n\nfn main() {\n    println!(\"Welcome to the a basic calculator built with Rust.\");\n\n    loop {\n        println!(\"Please enter an equation or \\\"q\\\" to quit: \");\n\n        let mut input = String::new();\n        io::stdin()\n            .read_line(&mut input)\n            .expect(\"Failed to read input\");\n\n        if input.trim() == \"q\" {\n            println!(\"Thanks for using this program.\");\n            break;\n        }\n\n        let valid_operators = vec![\"+\", \"-\", \"*\", \"/\"];\n\n        for operator in valid_operators {\n            match input.find(operator) {\n                Some(_) => {\n                    let parts: Vec<&str> = input.split(operator).collect();\n\n                    if parts.len() < 2 {\n                        panic!(\"Invalid equation.\");\n                    }\n\n                    let mut number_array = vec![];\n                    let mut counter = 0;\n\n                    while counter != parts.len() {\n                        let val: f64 = parts[counter].trim().parse().ok().expect(\"Enter a number.\");\n                        number_array.push(val);\n                        counter += 1;\n                    }\n\n                    match operator {\n                        \"+\" => println!(\"{}\", Calc::add(number_array)),\n                        \"-\" => println!(\"{}\", Calc::sub(number_array)),\n                        \"*\" => println!(\"{}\", Calc::mul(number_array)),\n                        \"/\" => println!(\"{}\", Calc::div(number_array)),\n                        _ => println!(\"Only addition, subtraction, multiplication and division are supported.\")\n                    }\n                }\n\n                None => {\n                    continue;\n                }\n            }\n        }\n    }\n}\n",
                            "link": "https://github.com/TravHaran/rust-calculator/blob/master/src/main.rs"
                        }
                    ]
                }
            ]
        },
        {
            "name": "sachinl0har/Basic-Calc",
            "path": "Basic-Calc/",
            "type": "folder",
            "keywords": [],
            "children": [
                {
                    "name": "README.md",
                    "path": "Basic-Calc/README.md",
                    "type": "file",
                    "keywords": [
                        ".Multiplication",
                        "using",
                        "random",
                        "provided",
                        "involving",
                        "length",
                        "updates",
                        ".Calculations",
                        "Celsius",
                        "related",
                        "promises",
                        "addition",
                        "description",
                        "perimeter",
                        "features",
                        "numbers.Calculation",
                        "specified",
                        "area",
                        "diameter",
                        "calculation",
                        "multiple",
                        "numbers.Subtraction",
                        "code",
                        "operation",
                        "exponent.Generation",
                        "circumference",
                        "tables",
                        "languages",
                        "Addition",
                        "multiplication",
                        "width",
                        "Fahrenheit.Armstrong",
                        "number.Calculations",
                        "circles",
                        "support",
                        "hypotenuse",
                        "subtraction",
                        "functionalities",
                        "operations",
                        "numbers.Conversion",
                        "includes",
                        "calculator",
                        "verification.Reversal",
                        "radius",
                        "rectangles",
                        "numbers.Multiplication",
                        "outlines",
                        "division",
                        "project",
                        "number",
                        "overview",
                        "Hypotenuse.7",
                        "/",
                        "Numbers.5",
                        "Subtraction",
                        "using",
                        "Number.12",
                        "Multipication",
                        "Numbers.6",
                        "Programs",
                        "Matrices",
                        "Circle",
                        "Random",
                        "Celcius",
                        "Table",
                        "Number",
                        "Circumference",
                        "Fahrenheit",
                        "Radius",
                        "i.e.",
                        "Number.9",
                        "*",
                        "Exponenent.8",
                        "Generate",
                        "cubes",
                        "digit",
                        "Hypotenuse",
                        "Matrix.More",
                        "Features",
                        "Numbers.2",
                        "Numbers.3",
                        "Numbers.4",
                        "Power",
                        "Reverse",
                        "Get",
                        "Number.11",
                        "Area.13",
                        "Tables",
                        "+",
                        "Addition",
                        "Area",
                        "Armstrong",
                        "Find",
                        "Features:1",
                        "Triangle",
                        "Converter",
                        "Diameter",
                        "sum",
                        "Basic-Calc-in-multiple-languages",
                        "Perimeter",
                        "Division",
                        "Transpose",
                        "uploaded",
                        "N",
                        "Base",
                        "Converter.10",
                        "Length",
                        "Number.15",
                        "%",
                        "Rectangle",
                        "number",
                        "Diagonal",
                        "Width.14"
                    ],
                    "annotation": "The provided code overview outlines the features of a basic calculator project involving multiple languages. The project includes various mathematical operations and functionalities:\n\nAddition of multiple numbers.\nSubtraction of multiple numbers.\nMultiplication and division of two numbers.\nModulus operation between two numbers.\nCalculation of the hypotenuse of a triangle.\nPower calculation using base and exponent.\nGeneration of random numbers.\nConversion between Celsius and Fahrenheit.\nArmstrong number verification.\nReversal of a number.\nCalculations related to circles (radius, diameter, circumference, area).\nCalculations related to rectangles (area, diagonal, perimeter, length, width).\nMultiplication tables for a specified number.\nMatrix operations like addition, subtraction, multiplication, and transposition.\n\nThe description also promises more features and support for additional languages in future updates.",
                    "content": "# Basic-Calc-in-multiple-languages \n\n### Features:\n1. Addition + - Addition of N Numbers.\n2. Subtraction - - Subtraction of N Numbers.\n3. Multipication * - Multipication of Two Numbers.\n4. Division / - Division of two Numbers.\n5. Modulus % - Modulus of Two Numbers.\n6. Hypotenuse - Find Any Triangle's Hypotenuse.\n7. Power of a Number - Find any Number Power using Base and Exponenent.\n8. Random Number - Generate any Random Number.\n9. Converter - Celcius to Fahrenheit and Fahrenheit to Celcius Converter.\n10. Armstrong Number - You can Find any number is the sum of cubes of each digit is equal to the number itself or Not i.e., Armstrong Number.\n11. Reverse a Number - Reverse any Number.\n12. Circle - To Find Radius, Diameter, Circumference and Area.\n13. Rectangle - To Find Area, Diagonal, Perimeter, Length and Width.\n14. Tables - You can Get any Table of any Number.\n15. Matrices - Addition, Subtraction, Multipication of two Matrices and Transpose of a Matrix.\n\nMore Features will be uploaded soon.\n\n\nMore Language Programs will be uploaded soon\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/README.md"
                },
                {
                    "name": "calc.java",
                    "path": "Basic-Calc/calc.java",
                    "type": "file",
                    "keywords": [
                        "method",
                        "numbers",
                        "using",
                        "provided",
                        "performing",
                        "results",
                        "calculations",
                        "varies",
                        "program",
                        "addition",
                        "display",
                        "statements",
                        "temperature",
                        "prompting",
                        "input",
                        "modulus",
                        "converters",
                        "calculation",
                        "code",
                        "operation",
                        "variety",
                        "output",
                        "according",
                        "measurements",
                        "tables",
                        "expected",
                        "multiplication",
                        "check",
                        "users",
                        "Armstrong",
                        "reversal",
                        "Java",
                        "hypotenuse",
                        "subtraction",
                        "power",
                        "circles",
                        "functionalities",
                        "operations",
                        "displaying",
                        "Based",
                        "user",
                        "chosen",
                        "interface",
                        "includes",
                        "calculator",
                        "transpose",
                        "class",
                        "rectangles",
                        "offering",
                        "executes",
                        "presents",
                        "inputs",
                        "defines",
                        "generation",
                        "compute",
                        "division",
                        "number",
                        "\\n10",
                        "checked",
                        "numS",
                        "Product",
                        "id",
                        "Multipication",
                        "Math.random",
                        "Table",
                        "rows",
                        "option",
                        "-=",
                        "H\\033",
                        "calc",
                        "\\n7",
                        "import",
                        "Difference",
                        "First",
                        "\\n15",
                        "Elements",
                        "matrix",
                        "Width",
                        "elements",
                        "circumference",
                        "side",
                        "Addition",
                        "circle.nextInt",
                        "Modulus",
                        "Columns",
                        "randN",
                        "+=",
                        "\\nSubtraction\\n",
                        "\\n4",
                        "Perimeter",
                        "option1",
                        "System.exit",
                        "Base",
                        "num.nextInt",
                        "\\nAddition\\n",
                        "rSum",
                        ">",
                        "Circle",
                        "columns1",
                        "Numbers",
                        "Raised",
                        "Visiting\\n",
                        "System.in",
                        "Subtraction",
                        "\\n9",
                        "\\nMultipication\\n",
                        "n",
                        "\\n8",
                        "\\n",
                        "length",
                        "multiply",
                        "B",
                        "Matrix",
                        "\\nThe",
                        "c",
                        "System.out.println",
                        "temp",
                        "rnum",
                        "multiplied",
                        "oexp",
                        "\\n6",
                        "area",
                        "matrix.nextInt",
                        "Temperature",
                        "Divison",
                        "con.nextInt",
                        "Substract",
                        "String",
                        "rectangle.nextDouble",
                        "rows1",
                        "+",
                        "case",
                        "\\n12",
                        "temp+",
                        "width",
                        "Rows",
                        "Armstrong",
                        "choice",
                        "\\n13",
                        "Diameter",
                        "int",
                        "Exit",
                        "revNum",
                        "Choice",
                        "max",
                        "[",
                        "base",
                        "result",
                        "Math.sqrt",
                        "\\nEnter",
                        "k",
                        "\\n16",
                        "want",
                        "%",
                        "min",
                        "number",
                        "cel",
                        "Circle\\n1",
                        "\\n2",
                        "randNumber",
                        "option2",
                        "Element",
                        "z",
                        "pow",
                        "\\nModulus\\n",
                        "circumference/",
                        "x",
                        "*",
                        "randN.nextInt",
                        "perimeter",
                        "args",
                        "Hypotenuse",
                        "rectangle",
                        "columns",
                        "diagonal",
                        "diameter",
                        "Power",
                        "SUM",
                        "see",
                        "tables.nextInt",
                        "b",
                        "Tables",
                        "tables",
                        "matrix2",
                        "j++",
                        "rectangleArea",
                        "Sum",
                        "=",
                        "Second",
                        "System.out.format",
                        "ae",
                        "Division",
                        "Transpose",
                        "rectangle.nextInt",
                        "cant",
                        "Integer",
                        "matrix1",
                        "Length",
                        "circle",
                        "Reverse",
                        "void",
                        "perimeter/2",
                        "Combination",
                        "Scanner",
                        "/",
                        "<",
                        "Matrices",
                        "Enter",
                        "Random",
                        "exp",
                        "\\n14",
                        "Number",
                        "Circumference",
                        "Fahrenheit",
                        "Celsius",
                        "Radius",
                        "calc.nextInt",
                        "i++",
                        "j",
                        "d\\t",
                        "\\n11",
                        "Reversed",
                        "revNum.nextInt",
                        "rev",
                        "break",
                        "element",
                        "ce+",
                        "pow.nextInt",
                        "tNum",
                        "Area",
                        "\\033",
                        "Rectangle\\n1",
                        "con",
                        "Converter",
                        "Whose",
                        "\\n5",
                        "\\n3",
                        "System.out.print",
                        "Printing",
                        "]",
                        "transpose",
                        "radius",
                        "Exponent",
                        "class",
                        "f",
                        "ce",
                        "remainder",
                        "e",
                        "\\nDivision\\n",
                        "==",
                        "java.util",
                        "switch",
                        "Rectangle",
                        "Diagonal",
                        "++i"
                    ],
                    "annotation": "The provided Java code defines a basic calculator program with numerous functionalities. The calc class includes a main method that presents a menu-driven interface to users, offering a variety of operations such as addition, subtraction, multiplication, division, modulus, hypotenuse calculation, power of a number, random number generation, converters (temperature), Armstrong number check, number reversal, and geometric calculations for circles and rectangles. It also includes operations for displaying multiplication tables and performing matrix operations (addition, subtraction, multiplication, and transpose). Based on user input, the program executes the relevant operation using switch-case statements. The expected output varies according to the chosen operation, often prompting the user for additional inputs (like numbers or measurements) to compute and display results.",
                    "content": "import java.util.*;\n\npublic class calc {\n    public static void main(String[] args){\n        double a, b, c = 0, e = 0, x, y, z;\n        int d, numS;\n        Scanner calc = new Scanner(System.in);\n        System.out.print(\"\\033[H\\033[2J\");\n        while(e == 0){\n            System.out.println(\"\\n1. Addition + \\n2. Subtraction - \\n3. Multipication * \\n4. Division / \\n5. Modulus % \\n6. Hypotenuse \\n7. Power of a Number \\n8. Random Number \\n9. Converter \\n10. Armstrong Number \\n11. Reverse a Number \\n12. Circle \\n13. Rectangle \\n14. Tables \\n15. Matrices \\n16. Exit \\nEnter Your Choice: \\n\");\n        d = calc.nextInt();\n        switch(d){\n            case 1:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nAddition\\n\");\n                System.out.println(\"Enter How many Numbers you want to SUM: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 1; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c += a;\n                }\n                System.out.println(\"\\nThe Sum of \" + numS + \" Numbers is \" + c );\n                break;\n            case 2:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nSubtraction\\n\");\n                System.out.println(\"Enter How many Numbers you want to Substract: \\n\");\n                numS = calc.nextInt();\n                System.out.println(\"Enter Number 1: \\n\");\n                c = calc.nextDouble();\n                System.out.println(\"Enter the \" + numS + \" Numbers: \\n\");\n                for(int i = 2; i <= numS; i++){\n                    System.out.println(\"Enter Number \" + (i) + \" : \\n\");\n                    a = calc.nextDouble();\n                    c -= a;\n                }\n                System.out.println(\"\\nThe Difference of \" + numS + \" Numbers is \" + c );\n                break;\n            case 3:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nMultipication\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a * b;\n                System.out.println(\"\\nThe Combination of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 4:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nDivision\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a / b;\n                System.out.println(\"\\nThe Divison of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 5:\n                System.out.print(\"\\033[H\\033[2J\");  \n                System.out.println(\"\\nModulus\\n\");\n                System.out.println(\"Enter First Number: \\n\");\n                a = calc.nextDouble();\n                System.out.println(\"Enter Second Number: \\n\");\n                b = calc.nextDouble();\n                c = a % b;\n                System.out.println(\"\\nThe Modulus of \" + a + \" and \" + b + \" is \" + c );\n                break;\n            case 6:\n                System.out.print(\"\\033[H\\033[2J\");\n                System.out.println(\"Enter side x: \");\n                x  = calc.nextDouble();\n                System.out.println(\"\\nEnter side y: \");\n                y = calc.nextDouble();\n                z = Math.sqrt((x * x) + (y * y));\n                System.out.println(\"The Hypotenuse is \" + z);\n                break;\n            case 7:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner pow = new Scanner(System.in);\n                int base, exp, oexp, result = 1;\n                System.out.println(\"Enter Base Number: \");\n                base = pow.nextInt();\n                System.out.println(\"Enter an Exponent: \");\n                exp = pow.nextInt();\n                oexp = exp;\n                while(exp != 0){\n                    result *= base;\n                    --exp;\n                }\n                System.out.println(\"The Power of \" + base + \" Raised to \" + oexp + \" is \" + result);\n                break;\n            case 8:\n                System.out.print(\"\\033[H\\033[2J\");\n                int min, max;\n                Scanner randN = new Scanner(System.in);\n                System.out.println(\"Enter the min number: \");\n                min  = randN.nextInt();\n                System.out.println(\"Enter the max number: \");\n                max = randN.nextInt();\n                int randNumber = (int)(Math.random() * (max - min + 1) + min);\n                System.out.println(\"Random Number Between \" + min + \" to \" + max + \" is \" + randNumber);\n                break;\n            case 9:\n                System.out.print(\"\\033[H\\033[2J\");\n                double f, cel; \n                int option;\n                Scanner con = new Scanner(System.in);\n                System.out.println(\"1. Celsius to Fahrenheit \\n2. Fahrenheit to Celsius \\nEnter Your Choice: \");\n                option = con.nextInt();\n                switch(option){\n                    case 1:\n                        System.out.println(\"Enter Temperature in Celsius: \");\n                        cel = con.nextDouble();\n                        f = (cel * 9/5) + 32;\n                        System.out.println(\"The Temperature of \" + cel + \" Celsius in Fahrenheit is: \" + f);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Temperature in Fahrenheit: \");\n                        f = con.nextDouble();\n                        cel = (f - 32) * 5/9;\n                        System.out.println(\"The Temperature of \" + f + \" Fahrenheit in Celsius is: \" + cel);\n                        break;\n                }\n                break;\n            case 10:\n                System.out.print(\"\\033[H\\033[2J\");\n                int ce = 0, ae, temp, n;\n                Scanner num = new Scanner(System.in);\n                System.out.print(\"Enter number to be checked: \");\n                n = num.nextInt();\n                temp = n;\n                while(n > 0){\n                    ae = n % 10;\n                    n = n/10;\n                    ce = ce+(ae*ae*ae);\n                }\n                if(temp == ce){\n                    System.out.println(temp+\" is an Armstrong Number.\");\n                }else{\n                    System.out.println(temp+\" is not an Armstrong Number.\");\n                }\n                break;\n            case 11:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner revNum = new Scanner(System.in);\n                int rnum, rev = 0, remainder;\n                System.out.println(\"Enter an Integer: \");\n                rnum = revNum.nextInt();\n                while(rnum != 0){\n                    remainder = rnum % 10;\n                    rev = rev * 10 + remainder;\n                    rnum /= 10;\n                }\n                System.out.println(\"Reversed Number of \" + rnum + \" is \" + rev);\n                break;\n            case 12:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner circle = new Scanner(System.in);\n                double radius, circumference, area, diameter;\n                int choice;\n                System.out.println(\"Circle\\n1. Radius \\n2. Diameter \\n3. Circumference \\n4. Area \\nEnter Your Choice: \");\n                choice = circle.nextInt();\n                switch(choice){\n                    case 1:\n                        System.out.println(\"Enter Circumference of Circle: \");\n                        circumference = circle.nextDouble();\n                        radius = circumference/(2 * 3.14);\n                        System.out.println(\"Radius of Circumference \" + circumference + \" = \" + radius);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        diameter = 2 * radius;\n                        System.out.println(\"The Diameter of radius \" + radius + \" Circle = \" + diameter);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        circumference = 2 * 3.14 * radius;\n                        System.out.println(\"The Circumference of Radius \" + radius + \" Circle = \" + circumference);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Radius of Circle: \");\n                        radius = circle.nextDouble();\n                        area = 3.14 * radius * radius;\n                        System.out.println(\"The Area of Radius \" + radius + \" Circle = \" + area);\n                        break;\n                }\n                break;\n            case 13:\n                System.out.print(\"\\033[H\\033[2J\");\n                double length, width, rectangleArea, perimeter, diagonal;\n                int option1;\n                Scanner rectangle = new Scanner(System.in);\n                System.out.println(\"Rectangle\\n1. Area \\n2. Diagonal \\n3. Perimeter \\n4. Length \\n5. Width \\nEnter Your Choice: \");\n                option1 = rectangle.nextInt();\n                switch(option1){\n                    case 1:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        rectangleArea = length * width;\n                        System.out.println(\"The Area of the Rectangle \" + length + \" Length \" + width + \" Width is \" + rectangleArea);\n                        break;\n                    case 2:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        diagonal = Math.sqrt((length * length) + (width * width));\n                        System.out.println(\"The Diagonal of the Rectangle \" + length + \" Length \" + width + \" width is \" + diagonal);\n                        break;\n                    case 3:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        perimeter = 2 * (length + width);\n                        System.out.println(\"The Perimeter of the Rectangle \" + length + \" Length \" + width + \" width is \" + perimeter);\n                        break;\n                    case 4:\n                        System.out.println(\"Enter Width of the Rectangle: \");\n                        width = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        length = (perimeter/2) - width;\n                        System.out.println(\"The Length of Rectangle whose Perimeter = \" + perimeter + \" and Width = \" + width + \" is \" + length);\n                        break;\n                    case 5:\n                        System.out.println(\"Enter Length of the Rectangle: \");\n                        length = rectangle.nextDouble();\n                        System.out.println(\"Enter Perimeter of the Rectangle: \");\n                        perimeter = rectangle.nextDouble();\n                        width = (perimeter/2) - length;\n                        System.out.println(\"The Width of Rectangle whose Perimeter = \" + perimeter + \" and Length = \" + length + \" is \" + width);\n                        break;\n                }\n                break;\n            case 14:\n                System.out.print(\"\\033[H\\033[2J\");\n                Scanner tables = new Scanner(System.in);\n                int tNum;\n                System.out.println(\"Enter a Number Whose Table you want to see: \");\n                tNum = tables.nextInt();\n                System.out.println(\"\\n\" + tNum + \" x 1 = \" + tNum * 1 + \" \\n\");\n                System.out.println(tNum + \" x 2 = \" + tNum * 2 + \" \\n\");\n                System.out.println(tNum + \" x 3 = \" + tNum * 3 + \" \\n\");\n                System.out.println(tNum + \" x 4 = \" + tNum * 4 + \" \\n\");\n                System.out.println(tNum + \" x 5 = \" + tNum * 5 + \" \\n\");\n                System.out.println(tNum + \" x 6 = \" + tNum * 6 + \" \\n\");\n                System.out.println(tNum + \" x 7 = \" + tNum * 7 + \" \\n\");\n                System.out.println(tNum + \" x 8 = \" + tNum * 8 + \" \\n\");\n                System.out.println(tNum + \" x 9 = \" + tNum * 9 + \" \\n\");\n                System.out.println(tNum + \" x 10 = \" + tNum * 10 + \" \\n\");\n                break;\n            case 15:\n                System.out.print(\"\\033[H\\033[2J\");\n                int rows, rows1, columns, columns1, option2, i, j, k, rSum = 0;\n                int[][] matrix1 = new int[100][100], matrix2 = new int[100][100], mSum = new int[100][100];\n                Scanner matrix = new Scanner(System.in);\n                System.out.println(\"1. Addition \\n2. Subtraction \\n3. Multipication \\n4. Transpose \\nEnter Your Choice: \");\n                option2 = matrix.nextInt();\n                switch(option2){\n                    case 1:\n                        System.out.println(\"Enter Number of Rows: \");\n                        rows = matrix.nextInt();\n                        System.out.println(\"Enter Number of Columns: \");\n                        columns = matrix.nextInt();\n                        System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                            matrix1[i][j] = matrix.nextInt();\n                            }\n                        }\n                        System.out.println(\"Enter element of 2nd matrix: \");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                                matrix2[i][j] = matrix.nextInt();\n                                }\n                            }\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                mSum[i][j] = matrix1[i][j] + matrix2[i][j];\n                            }\n                        }\n                        System.out.println(\"\\nSum of Two Matrices: \\n\");\n                        for(i = 0; i < rows; ++i){\n                            for(j = 0; j < columns; ++j){\n                                System.out.format(\"%d \", mSum[i][j]);\n                                if(j == columns - 1){\n                                    System.out.println(\"\\n\");\n                                }\n                            }\n                        }\n                break;\n                case 2:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of 1st matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter element of 2nd matrix: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element B%d%d: \", i + 1, j + 1);\n                            matrix2[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            mSum[i][j] = matrix1[i][j] - matrix2[i][j];\n                        }\n                    }\n                    System.out.println(\"\\nDifference of Two Matrices: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"%d \", mSum[i][j]);\n                            if(j == columns - 1){\n                                System.out.println(\"\\n\");\n                            }\n                        }\n                    }\n                    break;\n                case 3:\n                    System.out.println(\"Enter the number of rows of Matrix 1: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 1: \");\n                    columns = matrix.nextInt();\n                    matrix1 = new int[rows][columns];\n                    System.out.println(\"Enter elements of Matrix 1: \");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"Enter the number of rows of Matrix 2: \");\n                    rows1 = matrix.nextInt();\n                    System.out.println(\"Enter the number of columns of Matrix 2: \");\n                    columns1 = matrix.nextInt();\n                    if(columns != rows1){\n                        System.out.println(\"The Matrices cant be multiplied with each other as Number of columns of Matrix 1 id not equal to Number of rows of Matrix 2.\");\n                    }else{\n                        int[][] second = new int[rows1][columns1];\n                        int[][] multiply = new int[rows][columns1];\n                    System.out.println(\"Enter Elements of Matrix 2: \");\n                    for(i = 0; i < rows1; ++i){\n                        for(j = 0; j < columns1; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                second[i][j] = matrix.nextInt();\n                        }\n                    }\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            for(k = 0; k < rows1; k++){\n                                rSum = rSum + matrix1[i][k] * second[k][j];\n                            }\n                            multiply[i][j] = rSum;\n                            rSum = 0;\n                        }\n                    }\n                    System.out.println(\"Product of the Matrices: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0;j < columns1; j++){\n                            System.out.format(\"%d\\t\", multiply[i][j]);\n                            if(j == columns1 - 1){\n                            System.out.print(\"\\n\");\n                            }\n                        }\n                    }\n                    }\n                    break;\n                case 4:\n                    System.out.println(\"Enter Number of Rows: \");\n                    rows = matrix.nextInt();\n                    System.out.println(\"Enter Number of Columns: \");\n                    columns = matrix.nextInt();\n                    System.out.println(\"\\nEnter elements of the matrix: \\n\");\n                    for(i = 0; i < rows; ++i){\n                        for(j = 0; j < columns; ++j){\n                            System.out.format(\"Enter Element A%d%d: \", i + 1, j + 1);\n                                matrix1[i][j] = matrix.nextInt();\n                        }\n                    }\n                    System.out.println(\"The Matrix is: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(matrix1[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    int[][] transpose = new int[columns][rows];\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            transpose[i][j] = matrix1[j][i];\n                        }\n                    }\n                    System.out.println(\"Printing Matrix After Transpose: \");\n                    for(i = 0; i < rows; i++){\n                        for(j = 0; j < columns; j++){\n                            System.out.print(transpose[i][j] + \" \");\n                        }\n                        System.out.println();\n                    }\n                    break;\n                }\n                break;\n            case 16:\n                System.out.print(\"\\033[H\\033[2J\");\n                e = 1;\n                System.out.println(\"\\nThank You For Visiting\\n\");\n                System.exit(0);\n                break;\n        }\n        } calc.close();\n    } \n}\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.java"
                },
                {
                    "name": "calc.py",
                    "path": "Basic-Calc/calc.py",
                    "type": "file",
                    "keywords": [
                        "using",
                        "provided",
                        "tool",
                        "allows",
                        "selected",
                        "option",
                        "equations",
                        "Python",
                        "program",
                        "addition",
                        "begins",
                        "utility",
                        "screen",
                        "menu",
                        "functions",
                        "invokes",
                        "temperature",
                        "respective",
                        "map",
                        "area",
                        "input",
                        "serves",
                        "calculation",
                        "run",
                        "printing",
                        "script",
                        "code",
                        "actions",
                        "performs",
                        "task",
                        "multiplication",
                        "function",
                        "users",
                        "corresponding",
                        "subtraction",
                        "functionalities",
                        "operations",
                        "displaying",
                        "triangle",
                        "perform",
                        "choices",
                        "calculator",
                        "clearing",
                        "result",
                        "conversion",
                        "offering",
                        "presents",
                        "taking",
                        "division",
                        "coordinates",
                        "solution",
                        "Side",
                        "celsius",
                        "/",
                        "root",
                        "Function",
                        "Multipication\\n4",
                        "roots",
                        "\\nDifference",
                        "World",
                        "using",
                        "x^2",
                        "Enter",
                        "print",
                        "math",
                        "option",
                        "Subtraction\\n3",
                        "Number",
                        "Solutions\\n7",
                        "r",
                        "Celsius",
                        "Fahrenheit\\n2",
                        "addition",
                        "c",
                        "Value",
                        "x",
                        "Fahrenheit",
                        "*",
                        "Celsius\\n",
                        "Printed",
                        "import",
                        "system",
                        "Triangle\\n6",
                        "fahrenheit",
                        "/2",
                        "input",
                        "area",
                        "sqrt",
                        "Temperature",
                        "%",
                        "'cls",
                        "printing",
                        "Disctiminant",
                        "\\nDivision",
                        "float",
                        "b",
                        "\\nMultipication",
                        "message",
                        "+",
                        "sqrtdef",
                        "Area",
                        "converter",
                        "=",
                        "multipication",
                        "Addition\\n2",
                        "int",
                        "Print\\n",
                        "triangle",
                        "Choice",
                        "systemfrom",
                        "-b",
                        "switchers",
                        "option1",
                        "elif",
                        "f",
                        "World\\",
                        "Hello",
                        "Converter\\n8",
                        "Division\\n5",
                        "substraction",
                        "division",
                        "Roots",
                        "def",
                        "switchers.get",
                        "cel"
                    ],
                    "annotation": "The provided code is a Python program that serves as a simple command-line calculator and utility tool offering various functions such as addition, subtraction, multiplication, division, area calculation of a triangle, solution for quadratic equations, temperature conversion, and basic printing. The script begins by clearing the console screen and then presents a menu for the user to choose from the mentioned functionalities. Each option invokes a function that performs the respective task by taking user input and displaying the result. The main function coordinates these actions using a dictionary to map user choices to their corresponding functions. When run, it allows users to interactively perform different mathematical or utility operations selected from the menu.",
                    "content": "from os import system\nfrom math import sqrt\n\ndef main():\n    system('cls');\n    print(\"1. Addition\\n2. Subtraction\\n3. Multipication\\n4. Division\\n5. Area of Triangle\\n6. Quadratic Solutions\\n7. Converter\\n8. Print\\n\")\n    option = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: addition,\n        2: substraction,\n        3: multipication,\n        4: division,\n        5: triangle,\n        6: quadratic,\n        7: converter,\n        8: printing\n    }\n    switchers.get(option)()\n\ndef addition():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a + b\n    print(\"\\nSum of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef substraction():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a - b\n    print(\"\\nDifference of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef multipication():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a * b\n    print(\"\\nMultipication of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef division():\n    system('cls')\n    a = float(input(\"Enter 1st Number: \"))\n    b = float(input(\"Enter 2nd Number: \"))\n    c = a / b\n    print(\"\\nDivision of %0.2f and %0.2f is : %0.2f\" % (a, b, c))\n\ndef triangle():\n    system('cls')\n    a = float(input(\"Enter 1st Side: \"))\n    b = float(input(\"Enter 2st Side: \"))\n    c = float(input(\"Enter 3st Side: \"))\n    s = (a + b + c)/2\n    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5  \n    print('The area of the triangle is %0.2f' %area)\n\ndef quadratic():\n    system('cls')\n    print(\"Quadratic Function : (a * x^2) + b*x + c\")\n    a = float(input(\"Enter Value of a: \"))\n    b = float(input(\"Enter Value of b: \"))\n    c = float(input(\"Enter Value of c: \"))\n\n    r = b**2 - 4*a*c;\n    if r > 0:\n        roots = 2\n        x = (((-b) + sqrt(r))/(2*a))\n        y = (((-b) + sqrt(r))/(2*a))\n        print(\"There are two roots: %f an d %f\" % (x, y))\n    elif r == 0:\n        roots = 1\n        x = (-b) / 2*a\n        print(\"There is 1 root: \", x)\n    else:\n        roots = 0\n        print(\"No Roots, Disctiminant is less than 0.\")\n\ndef converter():\n    system('cls')\n    print(\"1. Celsius to Fahrenheit\\n2. Fahrenheit to Celsius\\n\")\n    option1 = int(input(\"Enter Your Choice: \"))\n    switchers = {\n        1: celsius,\n        2: fahrenheit\n    }\n    switchers.get(option1)()\n\ndef celsius():\n    system('cls')\n    cel = float(input(\"Enter Temperature in Celsius: \"))\n    f = (cel * 9/5) + 32;\n    print(\"The Temperature of %f Celsius in Fahrenheit is : %f\" % (cel, f))\ndef fahrenheit():\n    system('cls')\n    f = float(input(\"Enter Temperature in Fahrenheit: \"))\n    cel = (f - 32) * 5/9\n    print(\"The Temperature of %f Fahrenheit in Celsius is : %f\" % (f, cel))\n\ndef printing():\n    system('cls')\n    print(\"\\\"Hello World\\\"\")\n    print('\\'Hello World\\'')\n    message = \"Hello World (Printed using a variable)\"\n    print(message)\n\nmain()\n",
                    "link": "https://github.com/sachinl0har/Basic-Calc/blob/main/calc.py"
                }
            ]
        }
    ]
}